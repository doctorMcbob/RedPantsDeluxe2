KNIGHT|0,0,0,0|True|
START:0 knightidle -16,-16
LOOK:0 knightidle -16,-16
WALK:0 knightwalk0 0,-16
WALK:4 knightwalk1 -16,-16
WALK:8 knightwalk2 -16,-16
WALK:12 knightwalk3 -16,-16
WALK:16 knightwalk4 -16,-16
RUN:0 knightrun0 0,-48
RUN:4 knightrun1 0,-48
RUN:8 knightrun2 0,-32
RUN:12 knightrun3 0,-32
RUN:16 knightrun4 0,-48
RUNSLASH:0 knightrunslash0 -16,-80
RUNSLASH:8 knightrunslash1 -80,16
RUNSLASH:12 knightrunslash2 -80,32
JUMPSQUAT:0 knightsquat -16,-16
JUMPATK:0 knightjump0 -16,-16
JUMPATK:6 knightjump1 -32,-64
JUMPATK:8 knightjump2 -64,0
LAND:0 knightland -24,-16
SLASH:0 knightslash0 -8,-48
SLASH:8 knightslash1 -72,-16
SLASH:12 knightslash2 -56,-16
SLASH:15 knightslash3 -16,-48
BONK:0 knightbonk -16,-16
BONKLAND:0 knightbonkland0 -48,-16
BONKLAND:11 knightbonkland1 -32,0
FALL:0 knightfall -16,0
HITSTUN:0 knightbonk -16,-16

|START:0|
set self frame 0
set self state LOOK
set self limit 20
set self neglimit self.limit * -1
set self lookboxnumber 0
set self lookboxmax 6
set self slashLeft []
set self slashRight []
set self jumpLeft []
set self jumpRight []
set self runLeft []
set self runRight []
set self grav 1
set self walkspeed 4
set self runspeed 8
set self bonkxmod -4
set self bonkymod -5
set self jumpatkxmod 6
set self jumpatkymod -6
hitboxes knight
hurtboxes knight
set self slashfxnumber 0
set self slashfxmax 3
set self w self.w + 1

|LOOK:0|
set self x_vel 0
exec checkAir
exec applyGrav

|LOOK:3|
set self x_vel 0
exec clearLooks
exec lookLeft
exec lookRight
exec checkAir
exec applyGrav

|LOOK:4|
set self x_vel 0
exec checkAir
exec applyGrav
exec checkSlash
exec checkJump
exec checkRun

|LOOK:60|
set self x_vel 0
exec checkAir
exec applyGrav
set self state WALK
set self choice RAND?
if self.choice
   set self direction -1
endif
if not self.choice
   set self direction 1
endif
set self frame 0

|WALK:0|
exec checkAir
exec applyGrav
set self x_vel self.walkspeed * self.direction

|WALK:20|
exec WALK:0
set self frame 0
if RAND?
   set self state LOOK
endif

|RUN:0|
exec checkAir
exec applyGrav
set self x_vel self.runspeed * self.direction

|RUN:1|
exec RUN:0
if self.direction == 1
   exec runLookRight
endif
if self.direction == -1
   exec runLookLeft
endif

|RUN:2|
exec RUN:0
exec checkRunningLook

|RUN:12|
exec RUN:1

|RUN:13|
exec RUN:2

|RUN:20|
exec RUN:2
set self frame 0

|RUNSLASH:0|
exec checkAir
exec applyGrav

|RUNSLASH:12|
set self x_vel 0
exec checkAir
exec applyGrav

|RUNSLASH:20|
exec RUNSLASH:0
set self state LOOK
set self frame 0

|BONK:0|
exec applyGrav

|BONKLAND:0|
set self x_vel 0
exec checkAir
exec applyGrav

|BONKLAND:22|
exec checkAir
exec applyGrav
set self state LOOK
set self frame 0

|FALL:0|
exec applyGrav

|LAND:0|
exec checkAir
exec applyGrav

|LAND:4|
exec checkAir
exec applyGrav
set self state LOOK
set self frame 0

|JUMPSQUAT:0|
exec checkAir
exec applyGrav

|JUMPSQUAT:5|
exec JUMPSQUAT:0
set self state JUMPATK
set self frame 0
set self x_vel self.jumpatkxmod * self.direction
set self y_vel self.jumpatkymod

|SLASH:0|
exec checkAir
exec applyGrav

|SLASH:25|
exec SLASH:0
set self frame 0
set self state LOOK

|JUMPATK:0|
exec applyGrav

|HITSTUN:0|
set self x_vel 0
set self y_vel 0

|HITSTUN:4|
set self state BONK
set self frame 0
set self x_vel self.hit_x_vel
set self y_vel self.hit_y_vel
set self hit_x_vel 0
set self hit_y_vel 0

|HIT|
if self.can_die
   set self state DEAD
   set self frame 0
endif
if not self.can_die
   set self state HITSTUN
   set self frame 0
   set self direction related.direction * -1
   set self hit_x_vel 14 * related.direction
   set self hit_y_vel -8
endif
create slashfx0 related.name + SLASH + related.slashfxnumber self.x self.y
set related.name + SLASH + related.slashfxnumber direction related.direction * -1
set related slashfxnumber related.slashfxnumber + 1
if related.slashfxnumber > related.slashfxmax
   set related slashfxnumber 0
endif

|XCOLLISION|
if self.state == WALK
   set self direction self.direction * -1
endif
if self.state == RUN
   set self state BONK
   set self frame 0
   set self y_vel self.bonkymod
   set self x_vel self.bonkxmod * self.direction
endif

|YCOLLISION|
set self calc self.state == JUMPATK
if self.state == FALL or self.calc
   set self state LAND
   set self frame 0
endif
if self.state == BONK
   set self state BONKLAND
   set self frame 0
endif

|checkAir|
if self.y_vel
   set self state FALL
   set self frame 0
endif

|applyGrav|
set self y_vel self.y_vel + self.grav
if self.y_vel > self.limit
   set self y_vel self.limit
endif
if self.y_vel < self.neglimit
   set self y_vel self.neglimit
endif

|lookRight|
set self lookboxname self.name + slashLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x + self.w self.y
set self.lookboxname timer 30
set self.lookboxname return self.name
set self.lookboxname trigger slashRight
set self.lookboxname w 80
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif
set self lookboxname self.name + jumpLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x + self.w + 80 self.y
set self.lookboxname timer 30
set self.lookboxname return self.name
set self.lookboxname trigger jumpRight
set self.lookboxname w 100
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif
set self lookboxname self.name + runLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x + self.w + 180 self.y
set self.lookboxname timer 30
set self.lookboxname return self.name
set self.lookboxname trigger runRight
set self.lookboxname w 200
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif

|lookLeft|
set self lookboxname self.name + slashLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x - 80 self.y
set self.lookboxname timer 30
set self.lookboxname return self.name
set self.lookboxname trigger slashLeft
set self.lookboxname w 80
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif
set self lookboxname self.name + jumpLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x - 180 self.y
set self.lookboxname timer 30
set self.lookboxname return self.name
set self.lookboxname trigger jumpLeft
set self.lookboxname w 100
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif
set self lookboxname self.name + runLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x - 380 self.y
set self.lookboxname timer 30
set self.lookboxname return self.name
set self.lookboxname trigger runLeft
set self.lookboxname w 200
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif

|runLookRight|
set self lookboxname self.name + runningLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x + self.w + self.w self.y
set self.lookboxname timer 10
set self.lookboxname return self.name
set self.lookboxname trigger runningVision
set self.lookboxname w 100
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif

|runLookLeft|
set self lookboxname self.name + runningLookbox + self.lookboxnumber
create hitbox0 self.lookboxname self.x - self.w - 100 self.y
set self.lookboxname timer 10
set self.lookboxname return self.name
set self.lookboxname trigger runningVision
set self.lookboxname w 100
set self.lookboxname h self.h
set self lookboxnumber self.lookboxnumber + 1
if self.lookboxnumber > self.lookboxmax
   set self lookboxnumber 0
endif

|clearLooks|
set self slashLeft []
set self slashRight []
set self jumpLeft []
set self jumpRight []
set self runLeft []
set self runRight []
set self runningVision []

|checkSlash|
for name self.slashLeft
    if name.can_die
       exec clearLooks
       set self direction -1
       set self state SLASH
       set self frame 0
    endif
endfor
for name self.slashRight
    if name.can_die
       exec clearLooks
       set self direction 1
       set self state SLASH
       set self frame 0
    endif
endfor

|checkJump|
for name self.jumpLeft
    if name.can_die
       exec clearLooks
       set self direction -1
       set self state JUMPSQUAT
       set self frame 0
    endif
endfor
for name self.jumpRight
    if name.can_die
       exec clearLooks
       set self direction 1
       set self state JUMPSQUAT
       set self frame 0
    endif
endfor

|checkRun|
for name self.runLeft
    if name.can_die
       exec clearLooks
       set self direction -1 
       set self state RUN
       set self frame 0
   endif
endfor
for name self.runRight
    if name.can_die
       exec clearLooks
       set self direction 1
       set self state RUN
       set self frame 0
    endif
endfor

|checkRunningLook|
for name self.runningVision
    if name.can_die
       exec clearLooks
       set self state RUNSLASH
       set self frame 0
   endif
endfor

