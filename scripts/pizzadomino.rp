DOMINO|0,0,0,0|False|
START:0 empty 0,0
PLACE:0 empty 0,0
MOVE:0 empty 0,0
WAIT:0 empty 0,0
OFF:0 empty 0,0

|START:0|
set self L C
set self R P
set self piecenumber 0
set self piecemax 60
set self tangible 1
set self state PLACE
set self timermax 45
set self timer self.timermax
set self moveleft 0
set self moveright 0
set self swap 0
set self rot 0

|PLACE:0|
set self tangible 1
if COLLIDE?
   set pizzamanager0 state OVER
   set self state OFF
   break
endif
set self leftpiece self.name + piece + self.piecenumber
create pizzapiece0 self.leftpiece self.x self.y
set self piecenumber self.piecenumber + 1
if self.piecenumber > self.piecemax
   set self piecenumber 0
endif
set self rightpiece self.name + piece + self.piecenumber
create pizzapiece0 self.rightpiece self.x + 64 self.y
set self piecenumber self.piecenumber + 1
if self.piecenumber > self.piecemax
   set self piecenumber 0
endif

set self.leftpiece state self.L
set self.rightpiece state self.R

set self state MOVE
set self frame 0

|OFF:0|
set self tangible 0

|MOVE:0|
if self.timer > 0
   set self y_vel 0
   set self timer self.timer - 1
endif
if self.timer <= 0
   set self y_vel 32
   set self timer self.timermax
endif
set self x_vel 0
if self.moveleft
   set self x_vel self.x_vel - 64
   set self moveleft 0
endif
if self.moveright
   set self x_vel self.x_vel + 64
   set self moveright 0
endif
if self.movedown
   set self y_vel self.y_vel + 512
   set self movedown 0
   set self timer self.timermax
endif
if self.swap
   set self rot self.rot + 1
   if self.rot % 2 == 0
      set self origy self.y
      set self origw self.w
      set self origh self.h
      set self w 128
      set self h 64
      if COLLIDE?
         set self rot self.rot - 1
         set self y self.origy
         set self w self.origw
         set self h self.origh
      endif

      set self temp self.L
      set self L self.R
      set self R self.temp
      set self temp self.leftpiece
      set self leftpiece self.rightpiece
      set self rightpiece self.temp
   endif
   if self.rot % 2 == 1
      set self origy self.y
      set self origw self.w
      set self origh self.h
      set self w 64
      set self h 128
      if COLLIDE?
         set self rot self.rot - 1
         set self y self.origy
         set self w self.origw
         set self h self.origh
      endif
   endif
   set self swap 0
endif
exec updatePiecePosition

|updatePiecePosition|
if self.rot % 2 == 0
   set self.leftpiece x self.x
   set self.leftpiece y self.y
   set self.rightpiece x self.x + 64
   set self.rightpiece y self.y
endif
if self.rot % 2 == 1
   set self.leftpiece x self.x 
   set self.leftpiece y self.y
   set self.rightpiece x self.x 
   set self.rightpiece y self.y + 64 
endif

|YCOLLISION|
set self rot 0
set self w 128
set self h 64
set self tangible 0
set self.leftpiece tangible 1
set self.rightpiece tangible 1
set self state WAIT
set self rightpiece None
set self leftpiece None

