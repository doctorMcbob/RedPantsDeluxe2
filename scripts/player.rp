REDPANTSGUY|128,256,32,64|True|-16,0|
IDLE:0 redpantsstand
RUNNING:0 redpantsrun0
RUNNING:4 redpantsrun1
RUNNING:8 redpantsrun2
RUNNING:12 redpantsrun3
AIRIAL:0 redpantsjump1
SLIDE0:0 redpantsslide0
SLIDE1:0 redpantsslide1

|START:0|
# welcome to red pants script :)
set self state IDLE
set self frame 0
set self speed 5
set self traction 0.4 * -1
set self limit 20

|IDLE:0|
exec checkAir
if self.x_vel != 0
   set self state SLIDE0
endif

if self.y_vel == 0
   if inpLEFT
     set self state RUNNING
     set self frame 0
     set self direction -1
   endif
   if inpRIGHT
        set self state RUNNING
        set self frame 0
        set self direction 1
   endif
endif
exec applyGrav

|RUNNING:0|
set self x_vel self.speed * self.direction

set self calc1 self.direction == 1 nor inpRIGHT
set self calc2 self.direction == -1 nor inpLEFT

if inpRIGHT == inpLEFT or self.calc1 or self.calc2
   set self state SLIDE0
   set self frame 0
endif

exec checkAir
exec applyGrav

|RUNNING:16|
exec RUNNING:0
set self frame 0

|SLIDE0:0|
if self.x_vel == 0
   set self state IDLE
endif
if self.x_vel != 0
   set self x_vel self.direction * self.traction + self.x_vel
   set self absxvel abs self.x_vel
   if abs self.traction * 10 > self.absxvel
      set self state SLIDE1
      set self frame 0
   endif
   exec checkAir
   exec applyGrav
endif

|SLIDE1:0|
set self x_vel self.direction * self.traction + self.x_vel

set self calc1 self.x_vel < 1
set self calc2 self.direction == 1
set self check1 self.calc1 and self.calc2

set self calc1 self.x_vel > -1
set self calc2 self.direction == -1

set self check2 self.calc1 and self.calc2

if self.check1 or self.check2
   set self x_vel 0
   set self state IDLE
   set self frame 0
   exec IDLE:0
endif
if self.x_vel != 0
   exec checkAir
   exec applyGrav
endif

|AIRIAL:0|
if self.y_vel == 0
   set self state IDLE
endif
exec applyGrav

|LANDING:5|
set set state IDLE

|COLLIDE|
if self.state == PLATFORM
   set self touched 1
endif

|checkAir|
if self.y_vel
   set self state AIRIAL
   set self frame 0
endif

|applyGrav|
set self y_vel self.y_vel + 1
if self.y_vel > self.limit
   set self y_vel self.limit
endif
set self neglimit self.limit * -1
if self.y_vel < self.neglimit
   set self y_vel self.neglimit
endif

