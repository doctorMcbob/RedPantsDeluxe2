GOOSEBALL|0,0,0,0|True|
START:0 gooseballlook0 -16,0
LOOK:0 gooseballlook0 -16,0
LOOK:30 gooseballlook1 -16,0
LOOK:34 gooseballlook2 -16,0
LOOK:64 gooseballlook1 -16,0
JUMPSTART:0 gooseballjumpstart0 -16,0
JUMPSTART:2 gooseballjumpstart1 -16,0
JUMPSTART:4 gooseballstartjump2 -16,0
JUMPSTART:6 gooseballstartjump3 -16,0
JUMP:0 gooseballjump1 -16,0
JUMP:0 gooseballjump0 -16,0
LAND:0 gooseballland0 -16,0
LAND:4 gooseballland1 -16,0
CHARGESTART:0 gooseballchargestart0 -16,0
CHARGESTART:19 gooseballchargestart1 -16,0
CHARGE:0 gooseballcharge0 -16,0
CHARGE:4 gooseballcharge1 -16,0
BONK:0 gooseballbonk -16,0
BONKLAND:0 gooseballbonkland0 -16,0
BONKLAND:4 gooseballbonkland1 -16,0

|START:0|
set self frame 0
set self state LOOK
set self limit 20
set self neglimit self.limit * -1
set self lookboxnumber 0
set self seeleft off
set self seeright off
set self grav 1
set self chargespeed 7
set self chargebounce -3
set self jumpstrength -8
set self jumpvel 10
hitboxes gooseball
hurtboxes gooseball

|LOOK:0|
exec checkAir
exec applyGrav

|LOOK:1|
if self.direction == 1
   exec lookLeft
endif
if self.direction == -1
   exec lookRight
endif
exec checkAir
exec checkCharge

|LOOK:2|
exec checkAir
exec applyGrav
exec checkCharge

|LOOK:33|
exec checkAir
exec applyGrav
if RAND?
   set self state JUMPSTART
   set self frame 0
endif

|LOOK:34|
if self.direction == -1
   exec lookLeft
endif
if self.direction == 1
   exec lookRight
endif
exec checkAir
exec applyGrav

|LOOK:35|
exec checkAir
exec applyGrav
exec checkCharge

|LOOK:68|
set self frame 0
exec LOOK:0

|JUMPSTART:0|
exec checkAir
exec applyGrav

|JUMPSTART:8|
set self gleft RAND?
set self state JUMP
set self frame 0
set self y_vel self.jumpstrength
if self.gleft
   set self x_vel self.jumpvel * -1
endif
if not self.gleft
   set self x_vel self.jumpvel
endif

|JUMP:0|
exec applyGrav
if self.y_vel > 0
   img gooseballjump1
endif

|CHARGESTART:0|
exec checkAir
exec applyGrav

|CHARGESTART:24|
set self state CHARGE
set self frame 0
set self y_vel self.chargebounce

|CHARGE:0|
set self x_vel self.direction * self.chargespeed
exec applyGrav

|CHARGE:8|
exec CHARGE:0
set self frame 0

|LAND:0|
set self x_vel 0
exec checkAir
exec applyGrav

|LAND:8|
set self state LOOK
set self frame 0

|BONK:0|
exec applyGrav

|BONKLAND:0|
exec checkAir
exec applyGrav

|BONKLAND:8|
set self state LOOK
set self frame 0

|XCOLLISION|
set self calc1 self.state == CHARGE
if self.state == JUMP or self.calc1
   set self state BONK
   set self x_vel self.x_vel * -1
   set self y_vel 4
   set self frame 0
endif

|YCOLLISION|
if self.state == BONK
   set self state BONKLAND
   set self frame 0
endif
if self.state == CHARGE
   set self y_vel self.chargebounce
endif
if self.state == JUMP
   set self state LAND
   set self frame 0
endif

|HIT|
if player in self.name
   set self state BONK
   set self y_vel -3
endif

|applyGrav|
set self y_vel self.y_vel + self.grav
if self.y_vel > self.limit
   set self y_vel self.limit
endif
if self.y_vel < self.neglimit
   set self y_vel self.neglimit
endif

|checkAir|
if self.y_vel
   set self state JUMP
   set self frame 0
endif

|lookRight|
set self lookboxname self.name + lookbox + self.lookboxnumber
set self lookboxnumber self.lookboxnumber + 1
create hitbox self.lookboxname self.x + self.w self.y
set self.lookboxname timer 10
set self.lookboxname return self.name
set self.lookboxname trigger seeright
set self.lookboxname w 256
set self.lookboxname h 32

|lookLeft|
set self lookboxname self.name + lookbox + self.lookboxnumber
set self lookboxnumber self.lookboxnumber + 1
create hitbox self.lookboxname self.x - 256 self.y
set self.lookboxname timer 10
set self.lookboxname return self.name
set self.lookboxname trigger seeleft
set self.lookboxname w 256
set self.lookboxname h 32

|checkCharge|
if player in self.seeleft
   set self seeleft off
   set self direction -1
   set self state CHARGESTART
   set self frame 0
endif
if player in self.seeright
   set self seeright off
   set self direction 1
   set self state CHARGESTART
   set self frame 0
endif


