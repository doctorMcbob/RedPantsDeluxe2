SCRIPTS = {'redpantsguy': {'DANGLE:0': ['', 'if self.dangle_from', '   set self x_vel 0', '   set self y_vel 0', '   set self y self.dangle_from.y + self.dangle_from.h - 32', '   set self x self.dangle_from.x', '', '   if A_DOWN in inpEVENTS', '      set self state AIRIAL', '      set self frame 0', '      set self y_vel self.jumpstrength', '   endif', 'endif', ''], 'START:0': ['', '# welcome to red pants script :)', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self divestrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', 'hitboxes redpantsguy', 'hurtboxes redpantsguy', 'set self base redpantsguy', 'set self can_die 1', 'set self bloodnumber 0', '', 'set self rotation 0', 'set self door_key UP', '', 'set self width 32', 'set self height 64', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'if self.y_vel == 0', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpDOWN', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img redpantsslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.x_vel < self.speed', '   set self calc1 self.x_vel > 0 and inpRIGHT', '   set self calc1 not inpLEFT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT', '      set self direction -1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img redpantsjump2', 'endif', 'if self.calc2', '   img redpantsjump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if self.x_vel > 0', '   set self direction 1', 'endif', 'if self.x_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self x_vel self.divestrength * self.direction', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONK:360': ['', 'set self state IDLE', 'set self frame 0', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img redpantswalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpLEFT', '      \tset self x_vel self.x_vel - self.airdrift', '\tif self.x_vel < self.negairspeedcontrol', '      \t   set self x_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'XCOLLISION': ['', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction 1', '   endif', '   if self.x_vel < 0', '      set self direction -1', '   endif', 'endif', ''], 'YCOLLISION': ['', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVE', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', '', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpDOWN', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif', '']}, 'banana': {'START:0': ['', 'set self state BANANA', 'set self frame 0', 'set self collected 0', ''], 'BANANA:0': ['', 'if self.collected', '   set self state COLLECT', '   set self frame 0', 'endif', 'set self frame 0', ''], 'COLLECT:0': ['', 'set self y self.y - 3', ''], 'COLLECT:20': ['', 'goodbye', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.name in inv0.collected == 0', '      add inv0.collected related.name', '      set inv0 bananas inv0.bananas + 1', '   endif', 'endif', '']}, 'enflamed': {'START:0': ['', 'set self state FLAMING', 'set self frame 0', 'set self speed 8', 'set self burnoutspeed 5', 'set self jumpstrength -17', 'set self grav 1', 'if self.direction == 0', '   set self direction 1', 'endif', 'set self limit 20', 'set self neglimit self.limit * -1', 'set self x_vel 0', 'set self y_vel 0', 'set self burnoutframes 90', 'set self mashout 0', 'set self mashlimit 30', 'set self rotation 0', 'set self width 32', 'set self height 64', 'set self door_key UP', '', ''], 'FLAMING:16': ['', 'set self state FIRERUN', 'set self frame 0', ''], 'FIRERUN:0': ['', 'set self x_vel self.direction * self.speed', 'if inpA', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', 'if inpB or inpUP or inpDOWN or inpLEFT or inpRIGHT', '   set self mashout self.mashout + 1', 'endif', 'if self.mashout > self.mashlimit', '   set self state BURNOUT', '   set self frame 0', 'endif', 'exec checkAir', 'exec applyGrav', ''], 'FIRERUN:12': ['', 'exec FIRERUN:0', 'set self frame 0', ''], 'BURNOUT:0': ['', 'set self x_vel self.direction * self.burnoutspeed', 'set self burnoutframes self.burnoutframes - 1', 'if self.burnoutframes <= 0', '   set self state DEFLAME', '   set self frame 0', 'endif', 'exec checkAir', 'exec applyGrav', ''], 'BURNOUT:16': ['', 'exec BURNOUT:0', 'set self frame 0', ''], 'DEFLAME:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'DEFLAME:12': ['', 'set self hat 0', 'rebrand self.base', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'JUMPSQUAT:4': ['', 'set self frame 0', 'set self state FIREJUMP', 'set self y_vel self.jumpstrength', ''], 'FIREJUMP:0': ['', 'set self x_vel self.direction * self.speed', 'exec applyGrav', ''], 'FIREJUMP:12': ['', 'exec FIREJUMP:0', 'set self frame 0', ''], 'BURNOUTJUMP:0': ['', 'set self x_vel self.direction * self.burnoutspeed', 'set self burnoutframes self.burnoutframes - 1', 'exec applyGrav', ''], 'BURNOUTJUMP:12': ['', 'exec BURNOUTJUMP:0', 'set self frame 0', ''], 'TURNAROUND:3': ['', 'set self direction self.direction * -1', 'set self state FIRERUN', 'set self frame 0', ''], 'BURNOUTTURNAROUND:6': ['', 'set self direction self.direction * -1', 'set self state BURNOUT', 'set self frame 0', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state FIRERUN', 'set self frame 0', 'set self can_die 1', 'set self x self.respawnx', 'set self y self.respawny', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state DEFLAME', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'set self x_vel 0', 'if self.state != FLAMING', '   set self calc self.state != BURNOUT', '   if self.state != BURNOUTJUMP and self.calc', '      set self state TURNAROUND', '   endif', '   set self calc self.state == BURNOUT', '   if  self.state == BURNOUTJUMP or self.calc', '       set self state BURNOUTTURNAROUND', '   endif', '   set self frame 0', 'endif', ''], 'YCOLLISION': ['', 'if self.state == FIREJUMP', '   set self state FIRERUN', '   set self frame 0', 'endif', 'if self.state == BURNOUTJUMP', '   set self state BURNOUT', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', 'if self.base == redpantsguy', '   if self.hat != enflamed', '      rebrand enflamed', '      set self hat enflamed', '   endif', 'endif', 'if self.burnable', '   if self.state != BURNING', '      set self state BURNING', '      set self frame 0', '   endif', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'checkAir': ['', 'if self.y_vel', '   if self.state != BURNOUT', '      set self state FIREJUMP', '   endif', '   if self.state == BURNOUT', '      set self state BURNOUTJUMP', '   endif', '   set self frame 0', 'endif', '']}, 'hitbox': {'START:0': ['', 'set self frame 0', 'set self state CHECK', 'set self return 0', 'set self trigger trigger', 'set self lookfor 0', 'set self timer 0', ''], 'CHECK:0': ['', 'set self collide COLLIDE?', '', 'if self.return and self.collide', '   set self.return self.trigger self.collide', 'endif', '', 'if self.frame >= self.timer', '   goodbye', 'endif', '']}, 'moonmanD': {'DANGLE:0': ['', 'if self.dangle_from', '   set self x_vel 0', '   set self y_vel 0', '   set self y self.dangle_from.y + self.dangle_from.h - 32', '   set self x self.dangle_from.x', '', '   if A_DOWN in inpEVENTS', '      set self state AIRIAL', '      set self frame 0', '      set self y_vel self.jumpstrength', '   endif', 'endif', '', ''], 'START:0': ['', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self divestrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', '3set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', '', 'set self rotation 0', 'set self can_die 1', '', 'set self width 32', 'set self height 64', '   ', 'if COLLIDE?', '   set self revert 1', 'endif', '', 'if not self.revert', '   set self gravdir D', 'endif', 'if self.revert', '   set self revert 0', '   rebrand moonman + self.gravdir', 'endif', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'set self door_key UP', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'if self.y_vel == 0', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpDOWN', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img moonmanslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.x_vel < self.speed', '   set self calc1 self.x_vel > 0 and inpRIGHT', '   set self calc1 not inpLEFT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT', '      set self direction -1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if LEFT_DOWN in inpEVENTS', '      rebrand moonmanL', '   endif', '   if UP_DOWN in inpEVENTS', '      rebrand moonmanU', '   endif', '   if RIGHT_DOWN in inpEVENTS', '      rebrand moonmanR', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img moonmanjump2', 'endif', 'if self.calc2', '   img moonmanjump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if self.x_vel > 0', '   set self direction 1', 'endif', 'if self.x_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self x_vel self.divestrength * self.direction', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img moonmanwalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpLEFT', '      \tset self x_vel self.x_vel - self.airdrift', '\tif self.x_vel < self.negairspeedcontrol', '      \t   set self x_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVE', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'if abs self.x_vel < 1', '   set self x_vel 0', 'endif', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction 1', '   endif', '   if self.x_vel < 0', '      set self direction -1', '   endif', 'endif', ''], 'YCOLLISION': ['', 'if abs self.y_vel < 1', '   set self y_vel 0', 'endif', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpDOWN', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif', '']}, 'demostartdoor': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS ', '      move self demostart', '      view self.frame_name demostart', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif']}, 'torch': {'START:0': ['', 'set self state TORCH', 'set self frame 0', ''], 'TORCH:8': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.hat != enflamed', '      rebrand enflamed', '      set self hat enflamed', '   endif', 'endif', '']}, 'world3door': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self world3', '      view self.frame_name world3', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'airfireball': {'START:0': ['', 'set self speed 8', 'set self framelifespan 160', 'set self state FIREBALL', 'set self frame 0', 'set self y_vel 8', 'hitboxes airfireball', ''], 'FIREBALL:0': ['', 'set self x self.direction * self.speed + self.x', 'set self y self.y_vel + self.y', 'set self framelifespan self.framelifespan - 1', 'if self.framelifespan < 0', '   goodbye', 'endif', 'for _name COLLIDE?', '    if _name != self.creatorname', '       goodbye', '    endif', 'endfor', ''], 'FIREBALL:9': ['', 'set self frame 5', 'exec FIREBALL:0', ''], 'HIT': ['', 'if self.name != related.creatorname', '   set self state HITSTUN', '   set self frame 0', '   set self direction related.direction * -1', '   set self hit_x_vel 6 * related.direction', '   set self hit_y_vel -4', 'endif']}, 'moonmanU': {'DANGLE:0': ['', 'rebrand moonmanD', 'set self state DANGLE', 'exec DANGLE:0', ''], 'START:0': ['', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength 17', 'set self hopstrength 12', 'set self divestrength 14', 'set self rolloutstrength 8', 'set self bonkstrength 2', 'set self walljumpstrength 12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength 24', 'set self longjumpystrength 9', 'set self longjumpxstrength 12', '', 'set self rotation 180', 'set self can_die 1', '', 'set self width 32', 'set self height 64', '', 'if COLLIDE?', '   set self revert moonman + self.gravdir', 'endif', '', 'if not self.revert', '   set self gravdir U', 'endif', 'if self.revert', '   set self revert 0', '   rebrand moonman + self.gravdir', 'endif', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'set self door_key DOWN', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'If self.y_vel == 0', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpUP', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction * -1', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction * -1', 'set self calc1 self.direction == 1 nor inpLEFT', 'set self calc2 self.direction == -1 nor inpRIGHT', 'if inpLEFT == inpRIGHT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img moonmanslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.x_vel > self.speed', '   set self calc1 self.x_vel > 0 and inpLEFT', '   set self calc1 not inpRIGHT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpLEFT and self.x_vel < 0 and inpRIGHT', '      set self direction -1', '   endif', '   if not inpLEFT and self.x_vel < 0 and inpRIGHT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if LEFT_DOWN in inpEVENTS', '      rebrand moonmanL', '   endif', '   if RIGHT_DOWN in inpEVENTS', '      rebrand moonmanR', '   endif', '   if DOWN_DOWN in inpEVENTS', '      rebrand moonmanD', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img moonmanjump0', 'endif', 'if self.calc2', '   img moonmanjump2', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if self.x_vel > 0', '   set self direction -1', 'endif', 'if self.x_vel < 0', '   set self direction 1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self x_vel self.divestrength * self.direction * -1', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img moonmanwalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction * -1', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction * -1', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', 'if self.direction == 1', '   if inpLEFT', '     set self x_vel self.x_vel - self.airdrift', '     if self.x_vel < self.negairspeedcontrol', '        set self x_vel self.negairspeedcontrol', '     endif', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVE', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'if abs self.x_vel < 1', '   set self x_vel 0', 'endif', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction -1', '   endif', '   if self.x_vel < 0', '      set self direction 1', '   endif', 'endif', ''], 'YCOLLISION': ['', 'if abs self.y_vel < 1', '   set self y_vel 0', 'endif', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel - self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpUP', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif', '']}, 'bloated': {'START:0': ['', 'set self speed 3', 'set self airspeed 5', 'set self liljumpstr -15', 'set self medjumpstr -20', 'set self bigjumpstr -25', 'set self farts 3', 'set self fartstr -12', 'set self grav 1', 'set self limit 25', 'set self neglimit -25', 'set self bonkstr -4', 'set self state DRINK', 'set self rotation 0', 'set self door_key UP', 'set self width 32', 'set self height 64', ''], 'DRINK:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'DRINK:48': ['', 'set self state IDLE', 'set self frame 0', ''], 'IDLE:0': ['', 'exec checkAir', 'set self x_vel 0', 'if not inpRIGHT and inpLEFT', '   set self state WALK', '   set self frame 0', '   set self direction -1', 'endif', 'if not inpLEFT and inpRIGHT', '   set self state WALK', '   set self frame 0', '   set self direction 1', 'endif', '', 'exec checkJump', 'exec checkFart', 'exec applyGrav', ''], 'WALK:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkAir', 'exec checkJump', 'exec checkFart', 'exec applyGrav', ''], 'WALK:16': ['', 'exec WALK:0', 'set self frame 0', ''], 'JUMPING:0': ['', 'exec applyGrav', 'if self.y_vel > 0', '   set self state FALLING', '   set self frame 0', 'endif', 'exec checkFart', ''], 'FALLING:0': ['', 'exec applyGrav', 'exec checkFart', ''], 'LILSQUAT:0': ['', 'set self x_vel 0', 'if not inpA', '   set self state JUMPING', '   set self frame 0', '   set self y_vel self.liljumpstr', '   if inpLEFT != inpRIGHT', '      if inpRIGHT', '         set self x_vel self.airspeed', '      \t set self direction 1', '      endif', '      if inpLEFT', '      \t set self x_vel self.airspeed * -1', '      \t set self direction -1', '      endif      ', '   endif', 'endif', ''], 'LILSQUAT:15': ['', 'exec LILSQUAT:0', 'set self state MEDSQUAT', 'set self frame 0', ''], 'MEDSQUAT:0': ['', 'if not inpA', '   set self state JUMPING', '   set self frame 0', '   set self y_vel self.medjumpstr', '   if inpLEFT != inpRIGHT', '      if inpRIGHT', '         set self x_vel self.airspeed', '      \t set self direction 1', '      endif', '      if inpLEFT', '      \t set self x_vel self.airspeed * -1', '      \t set self direction -1', '      endif      ', '   endif', 'endif', ''], 'MEDSQUAT:15': ['', 'exec MEDSQUAT:0', 'set self state BIGSQUAT', 'set self frame 0', ''], 'BIGSQUAT:0': ['', 'if not inpA', '   set self state JUMPING', '   set self frame 0', '   set self y_vel self.bigjumpstr', '   if inpLEFT != inpRIGHT', '      if inpRIGHT', '         set self x_vel self.airspeed', '      \t set self direction 1', '      endif', '      if inpLEFT', '      \t set self x_vel self.airspeed * -1', '      \t set self direction -1', '      endif      ', '   endif', 'endif', ''], 'BIGSQUAT:15': ['', 'set self state JUMPING', 'set self frame 0', 'set self y_vel self.bigjumpstr', 'set self x_vel 0', 'if inpLEFT != inpRIGHT', '   if inpRIGHT', '      set self x_vel self.airspeed', '      set self direction 1', '   endif', '   if inpLEFT', '      set self x_vel self.airspeed * -1', '      set self direction -1', '   endif      ', 'endif', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'set self frame 0', 'set self x self.respawnx', 'set self y self.respawny', ''], 'BONKLAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'LANDING:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'LANDING:10': ['', 'set self x_vel 0', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'set self hit_x_vel 4 * related.direction', 'set self hit_y_vel -13', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'set self calc self.state == JUMPING', 'if self.state == FALLING or self.calc', '   set self state BONK', '   set self x_vel self.bonkstr * self.direction', '   set self frame 0', 'endif', ''], 'YCOLLISION': ['', 'if self.state == FALLING', '    set self state LANDING', '    set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'if self.y_vel', '   set self state FALLING', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state LILSQUAT', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'checkFart': ['', 'if B_DOWN in inpEVENTS', '   set self state JUMPING', '   set self y_vel self.fartstr', '   set self frame 0', '   set self x_vel 0', '   if inpLEFT != inpRIGHT', '      if inpRIGHT', '         set self x_vel self.airspeed', '      \t set self direction 1', '      endif', '      if inpLEFT', '         set self x_vel self.airspeed * -1', '         set self direction -1', '      endif', '   endif', '   set self farts self.farts - 1', '   if self.farts == 0', '      rebrand self.base', '      set self hat 0', '      set self state IDLE', '      set self frame 0', '   endif', '   create fart0 self.name + fart + self.farts self.x self.y + 32', 'endif', '']}, 'milk': {'START:0': ['', 'set self state MILK', ''], 'MILK:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.hat != milk', '      rebrand bloated', '      set self hat milk', '   endif', 'endif']}, 'fighterhat': {'START:0': ['', 'set self state LOCKED', ''], 'LOCKED:0': ['', 'set self frame 0', 'if inv0.fighter_unlock', '   set self state HAT', 'endif', ''], 'HAT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.hat != fighter', '      if related.state == HAT', '         rebrand fighter', '         set self hat fighter', '      endif', '   endif', 'endif']}, 'player': {'START:0': ['', '# welcome to red pants script :)', 'set self _input_name PLAYER1', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self divestrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', 'focus MAIN self', 'set self frame_name MAIN', 'hitboxes redpantsguy', 'hurtboxes redpantsguy', 'set self base player', 'set self can_die 1', '', 'set self rotation 0', 'set self door_key UP', '', 'set self width 32', 'set self height 64', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'if self.y_vel == 0', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpDOWN', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img redpantsslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.x_vel < self.speed', '   set self calc1 self.x_vel > 0 and inpRIGHT', '   set self calc1 not inpLEFT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT', '      set self direction -1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img redpantsjump2', 'endif', 'if self.calc2', '   img redpantsjump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if self.x_vel > 0', '   set self direction 1', 'endif', 'if self.x_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self x_vel self.divestrength * self.direction', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'set self x_vel self.bonkstrength * self.direction * -1', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img redpantswalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpLEFT', '      \tset self x_vel self.x_vel - self.airdrift', '\tif self.x_vel < self.negairspeedcontrol', '      \t   set self x_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', '', ''], 'XCOLLISION': ['', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction 1', '   endif', '   if self.x_vel < 0', '      set self direction -1', '   endif', 'endif', ''], 'YCOLLISION': ['', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpDOWN', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', '']}, 'fighter': {'DANGLE:0': ['', 'if self.dangle_from', '   set self x_vel 0', '   set self y_vel 0', '   set self y self.dangle_from.y + self.dangle_from.h - 32', '   set self x self.dangle_from.x', '', '   if A_DOWN in inpEVENTS', '      set self state AIRIAL', '      set self frame 0', '      set self y_vel self.jumpstrength', '   endif', 'endif', ''], 'START:0': ['', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self divestrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 15', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', 'set self kickseverity 8', 'set self tatsuspeed 9', 'set self slidekickspeed 9', 'set self fireballnumber 0', 'set self door_key UP', '', 'set self fireballxmod -7', 'set self fireballymod -8', 'set self shoryuxstr 5', 'set self shoryuystr -14', 'set self tatsuflipxmod 9', 'set self tatsuflipymod -7', '', 'set self can_die 1', 'set self respawnx self.x', 'set self respawny self.y', 'set self rotation 0', '', 'set self width 32', 'set self height 64', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'if self.y_vel == 0', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpDOWN', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', '', 'set self calc inpRIGHT and self.direction == 1', 'set self calc inpLEFT and self.direction == -1 or self.calc', 'if inpB', '   if self.calc', '      set self state HADOKEN', '   endif', '   if not self.calc', '      set self state SLIDEKICK', '      set self x_vel self.direction * self.slidekickspeed', '   endif', '   set self frame 0', 'endif', 'set self frame 0', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img fighterslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.x_vel < self.speed', '   set self calc1 self.x_vel > 0 and inpRIGHT', '   set self calc1 not inpLEFT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT', '      set self direction -1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', '   if B_DOWN in inpEVENTS and inpUP', '      set self state SHORYUSTART', '   endif', '   set self calc inpRIGHT and self.direction == -1', '   set self calc inpLEFT and self.direction == 1 or self.calc', '   if B_DOWN in inpEVENTS and self.calc', '      set self state TATSUSTART', '      set self frame 0', '   endif', '   set self calc inpRIGHT and self.direction == 1', '   set self calc inpLEFT and self.direction == -1 or self.calc', '   if B_DOWN in inpEVENTS and self.calc and inpDOWN', '      set self state AIRHADOKEN', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img fighterjump2', 'endif', 'if self.calc2', '   img fighterjump0', 'endif', 'exec applyGrav', ''], 'AIRHADOKEN:0': ['', 'exec applyGrav', ''], 'AIRHADOKEN:9': ['', 'set self x_vel self.fireballxmod * self.direction', 'set self y_vel self.fireballymod', 'if self.direction == -1', '   set self hadox self.x', 'endif', 'if self.direction == 1', '   set self hadox self.x + self.w', 'endif', 'create airfireball0 self.name + fireball + self.fireballnumber self.hadox self.y + 32', 'set self.name + fireball + self.fireballnumber creatorname self.name', 'set self.name + fireball + self.fireballnumber direction self.direction', 'set self fireballnumber self.fireballnumber + 1', 'exec applyGrav', ''], 'AIRHADOKEN:10': ['', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if self.x_vel > 0', '   set self direction 1', 'endif', 'if self.x_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self x_vel self.divestrength * self.direction', 'set self state DIVEKICK', ''], 'DIVEKICK:0': ['', 'exec applyGrav', ''], 'SLIDEKICK:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img fighterwalltouch', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:9': ['', 'exec PUNCH:0', 'exec checkKick', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'KICK:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'KICK:20': ['', 'set self state IDLE', 'set self frame 0', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpLEFT', '      \tset self x_vel self.x_vel - self.airdrift', '\tif self.x_vel < self.negairspeedcontrol', '      \t   set self x_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', ''], 'TATSUSTART:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'TATSUSTART:8': ['', 'set self x_vel self.direction * self.tatsuspeed', 'set self state TATSU', 'set self frame 0', 'set self cantatsucancel 0', ''], 'TATSU:0': ['', 'if abs self.x_vel > self.tatsuspeed or self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', 'set self x_vel self.direction * self.tatsuspeed', 'if B_DOWN in inpEVENTS and self.cantatsucancel', '   set self state TATSUFLIP', '   set self frame 0', 'endif', ''], 'TATSU:16': ['', 'exec TATSU:0', 'set self cantatsucancel 1', 'set self frame 0', ''], 'TATSUFLIP:0': ['', 'exec applyGrav', ''], 'TATSUFLIP:8': ['', 'applyGrav', 'exec AIRIAL:0', ''], 'SHORYUSTART:7': ['', 'set self state SHORYU', 'set self frame 0', 'set self x_vel self.direction * self.shoryuxstr', 'set self y_vel self.shoryuystr', ''], 'SHORYU:0': ['', 'exec applyGrav', 'if self.y_vel > 0', '   set self state SHORYUFALL', '   set self frame 0', 'endif', ''], 'SHORYUFALL:0': ['', 'exec SLIDEFLIP:0', ''], 'HADOKEN:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'HADOKEN:12': ['', 'exec HADOKEN:0', 'if self.direction == -1', '   set self hadox self.x', 'endif', 'if self.direction == 1', '   set self hadox self.x + self.w', 'endif', 'create fireball0 self.name + fireball + self.fireballnumber self.hadox self.y + 32', 'set self.name + fireball + self.fireballnumber creatorname self.name', 'set self.name + fireball + self.fireballnumber direction self.direction', 'set self fireballnumber self.fireballnumber + 1', ''], 'HADOKEN:13': ['', 'exec HADOKEN:0', ''], 'HADOKEN:24': ['', 'set self state IDLE', 'set self frame 0', 'exec IDLE:0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVEKICK', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == SLIDEKICK', '   set self hit_x_vel 13 * related.direction', '   set self hit_y_vel -9', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', 'if related.state == KICK', '   set self hit_x_vel 10 * related.direction', '   set self hit_y_vel -15', 'endif', 'if related.state == SHORYU', '   set self hit_x_vel 4 * related.direction', '   set self hit_y_vel -19   ', 'endif', 'if related.state == TATSU', '   set self hit_x_vel 12 * related.direction', '   set self hit_y_vel -6   ', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'set self calc1 self.state == DIVEKICK', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 self.state == SHORYUFALL', 'set self calc1 self.state == TATSUFLIP or self.calc1', 'set self calc1 self.state == AIRHADOKEN or self.calc1', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction 1', '   endif', '   if self.x_vel < 0', '      set self direction -1', '   endif', 'endif', 'if self.state == TATSU', '   if inpA', '      set self state TATSUFLIP', '      set self frame 0', '      set self x_vel self.tatsuflipxmod * self.direction * -1', '       set self y_vel self.tatsuflipymod', '   endif', '   if not inpA', '      set self state BONK', '      set self frame 0', '   endif', 'endif', ''], 'YCOLLISION': ['', 'set self calc1 self.state == SHORYUFALL', 'set self calc1 self.state == TATSUFLIP or self.calc1', 'set self calc1 self.state == ROLLOUT or self.calc1', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'set self calc1 self.state == AIRHADOKEN or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVEKICK', '   set self state SLIDEKICK', '   set self frame 0', 'endif', 'if self.state == SLIDEKICK', '   set self y_vel -1 * self.y_vel * 0.8', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpDOWN', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   if inpUP', '      set self state SHORYUSTART', '   endif', '   set self frame 0', 'endif', ''], 'checkKick': ['', '# bufferable pog?', 'if inpB', '   set self x_vel self.direction * self.kickseverity', '   set self state KICK', '   set self frame 0', 'endif', '']}, 'cheese': {'START:0': ['', 'set self state CHEESE', 'set self frame 0', 'set self collected 0', ''], 'CHEESE:0': ['', 'if self.collected', '   set self state COLLECT', '   set self frame 0', 'endif', ''], 'COLLECT:0': ['', 'set self y self.y - 3', ''], 'COLLECT:20': ['', 'goodbye', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.cheese', '      set self cheese self.cheese + 1', '   endif', '   if not self.cheese', '      set self cheese 1', '   endif', 'endif', '']}, 'door2': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self root', '      view self.frame_name root', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'player4': {'START:0': ['', 'if isframe MAIN4', '   set self _input_name PLAYER4', '   focus MAIN4 self', '   set self frame_name MAIN4', '   rebrand redpantsguy', '   set self tangible 1', '   set self respawnx self.x', '   set self respawny self.y', 'endif', 'if not isframe MAIN4', '   goodbye', 'endif']}, 'door': {'START:0': ['', 'set self state DOOR', 'set self destination world2', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self world2', '      view self.frame_name world2', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'player1': {'START:0': ['', 'if isframe MAIN', '   set self _input_name PLAYER1', '   focus MAIN self', '   set self frame_name MAIN', '   rebrand redpantsguy', '   set self tangible 1', '   set self respawnx self.x', '   set self respawny self.y', 'endif', 'if not isframe MAIN', '   goodbye', 'endif']}, 'gooseballlookhitbox': {'START:0': ['', 'set self frame 0', 'set self state CHECK:0', 'set self return 0', 'set self trigger trigger', 'set self lookfor 0', ''], 'CHECK:0': ['', 'set self calc ?COLLIDE == self.lookfor and self.lookfor != 0', 'set self calc ?COLLIDE and self.lookfor == 0', '', 'if self.return', '   set self.return  self.trigger self.calc', 'endif', '', 'goodbye']}, 'antlers': {'DANGLE:0': ['', 'if self.dangle_from', '   set self x_vel 0', '   set self y_vel 0', '   set self y self.dangle_from.y + self.dangle_from.h - 32', '   set self x self.dangle_from.x', '', '   if A_DOWN in inpEVENTS', '      set self state AIRIAL', '      set self frame 0', '      set self y_vel self.jumpstrength', '   endif', 'endif', ''], 'START:0': ['', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self flystrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', 'set self flydownbuffer 3', 'set self flyupbuffer 4', 'set self door_key UP', '', 'set self can_die 1', 'set self respawnx self.x', 'set self respawny self.y', '', 'set self flyangle 0', 'set self rotation 0', '', 'set self width 32', 'set self height 64', '', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'if self.y_vel == 0', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpDOWN', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img antlerslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.x_vel < self.speed', '   set self calc1 self.x_vel > 0 and inpRIGHT', '   set self calc1 not inpLEFT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT', '      set self direction -1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if B_DOWN in inpEVENTS', '      set self state FLYSTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img antlerjump2', 'endif', 'if self.calc2', '   img antlerjump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if self.x_vel > 0', '   set self direction 1', 'endif', 'if self.x_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'FLYSTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'FLYSTART:9': ['', 'set self state FLY', 'set self flyangle 0', ''], 'FLY:0': ['', '', 'set self calc1 self.direction == 1', 'set self calc2 self.frame > self.flyupbuffer and inpLEFT and self.calc1', 'set self calc3 self.direction == -1', 'set self calc4 self.frame > self.flyupbuffer and inpRIGHT and self.calc3', '', 'if self.calc2 or self.calc4', '   set self frame 0', '   set self flyangle self.flyangle + 1', '   if self.flyangle > 2', '      set self flyangle 2', '   endif', 'endif', '', 'set self calc1 self.direction == -1', 'set self calc2 self.frame > self.flydownbuffer and inpLEFT and self.calc1', 'set self calc3 self.direction == 1', 'set self calc4 self.frame > self.flydownbuffer and inpRIGHT and self.calc3', '', 'if self.calc2 or self.calc4', '   set self frame 0', '   set self flyangle self.flyangle - 1', '   if self.flyangle < -2', '      set self flyangle -2', '   endif', 'endif', '', 'if self.flyangle == 0', '   img antlerfly0', '   set self y_vel 0', '   set self x_vel self.flystrength * self.direction', 'endif', '', 'if self.flyangle == 1', '   img antlerflyup0', '   set self y_vel 0 - self.flystrength / 3', '   set self x_vel self.flystrength * self.direction / 3 * 2', 'endif', '', 'if self.flyangle == 2', '   img antlerflyup1', '   set self y_vel 0 - self.flystrength', '   set self x_vel self.flystrength * self.direction / 3', 'endif', '', 'if self.flyangle == -1', '   img antlerflydown0', '   set self y_vel self.flystrength / 3', '   set self x_vel self.flystrength * self.direction / 3 * 3.5', 'endif', '', 'if self.flyangle == -2', '   img antlerflydown1', '   set self y_vel self.flystrength', '   set self x_vel self.flystrength * self.direction / 3', 'endif', ''], 'FLYLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img antlerwalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpLEFT', '      \tset self x_vel self.x_vel - self.airdrift', '\tif self.x_vel < self.negairspeedcontrol', '      \t   set self x_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'set self calc1 abs self.flyangle != 2', 'set self calc1 self.state == FLY and self.calc1', 'set self calc1 self.state == FLYLAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 abs self.flyangle == 2', 'set self calc1 self.state == FLY and self.calc1', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction 1', '   endif', '   if self.x_vel < 0', '      set self direction -1', '   endif', 'endif', ''], 'YCOLLISION': ['', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == FLY', '   set self state FLYLAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpDOWN', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif']}, 'shadowshoesshoes': {'START:0': ['', 'set self state LOCKED', ''], 'LOCKED:0': ['', 'set self frame 0', 'if inv0.shoes_unlock', '   set self state HAT', 'endif', ''], 'HAT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.hat != shadowshoes', '      if related.state == HAT', '         rebrand shadowshoes', '         set self hat shadowshoes', '      endif', '   endif', 'endif']}, 'platformwood': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'thwack': {'START:0': ['', 'set self roll RAND? + RAND?', 'if self.roll == 0', '   set self state THWACKSMALL', 'endif', 'if self.roll == 1', '   set self state THWACKMIDDLE', 'endif', 'if self.roll == 2', '   set self state THWACKBIG  ', 'endif', 'set self frame 0', 'set self x_vel -1 + RAND? + RAND? * 3', 'set self y_vel -1 + RAND? + RAND? * 3', ''], 'THWACKSMALL:0': ['', 'set self x self.x + self.x_vel', 'set self y self.y + self.y_vel', ''], 'THWACKMIDDLE:0': ['', 'set self x self.x + self.x_vel', 'set self y self.y + self.y_vel', ''], 'THWACKBIG:0': ['', 'set self x self.x + self.x_vel', 'set self y self.y + self.y_vel', ''], 'THWACKSMALL:8': ['', 'goodbye', ''], 'THWACKMIDDLE:8': ['', 'goodbye', ''], 'THWACKBIG:8': ['', 'goodbye', '']}, 'platformrug': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'gooseball': {'START:0': ['', 'set self frame 0', 'set self state LOOK', 'set self limit 20', 'set self neglimit self.limit * -1', 'set self lookboxnumber 0', 'set self seeleft []', 'set self seeright []', 'set self grav 1', 'set self chargespeed 7', 'set self chargebounce -3', 'set self jumpstrength -8', 'set self jumpvel 10', 'hitboxes gooseball', 'hurtboxes gooseball', ''], 'LOOK:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'LOOK:1': ['', 'if self.direction == 1', '   exec lookLeft', 'endif', 'if self.direction == -1', '   exec lookRight', 'endif', 'exec checkAir', 'exec checkCharge', ''], 'LOOK:2': ['', 'exec checkAir', 'exec applyGrav', 'exec checkCharge', ''], 'LOOK:33': ['', 'exec checkAir', 'exec applyGrav', 'if RAND?', '   set self state JUMPSTART', '   set self frame 0', 'endif', ''], 'LOOK:34': ['', 'if self.direction == -1', '   exec lookLeft', 'endif', 'if self.direction == 1', '   exec lookRight', 'endif', 'exec checkAir', 'exec applyGrav', ''], 'LOOK:35': ['', 'exec checkAir', 'exec applyGrav', 'exec checkCharge', ''], 'LOOK:68': ['', 'set self frame 0', 'exec LOOK:0', ''], 'JUMPSTART:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'JUMPSTART:8': ['', 'set self gleft RAND?', 'set self state JUMP', 'set self frame 0', 'set self y_vel self.jumpstrength', 'if self.gleft', '   set self x_vel self.jumpvel * -1', 'endif', 'if not self.gleft', '   set self x_vel self.jumpvel', 'endif', ''], 'JUMP:0': ['', 'exec applyGrav', 'if self.y_vel > 0', '   img gooseballjump1', 'endif', ''], 'CHARGESTART:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'CHARGESTART:24': ['', 'set self state CHARGE', 'set self frame 0', 'set self y_vel self.chargebounce', ''], 'CHARGE:0': ['', 'set self x_vel self.direction * self.chargespeed', 'exec applyGrav', ''], 'CHARGE:8': ['', 'exec CHARGE:0', 'set self frame 0', ''], 'LAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'LAND:8': ['', 'set self state LOOK', 'set self frame 0', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'BONKLAND:8': ['', 'set self state LOOK', 'set self frame 0', ''], 'XCOLLISION': ['', 'set self calc1 self.state == CHARGE', 'if self.state == JUMP or self.calc1', '   set self state BONK', '   set self x_vel self.x_vel * -1', '   set self y_vel 4', '   set self frame 0', 'endif', ''], 'YCOLLISION': ['', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', 'if self.state == CHARGE', '   set self y_vel self.chargebounce', 'endif', 'if self.state == JUMP', '   set self state LAND', '   set self frame 0', 'endif', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'set self hit_x_vel 8 * related.direction', 'set self hit_y_vel -6', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'checkAir': ['', 'if self.y_vel', '   set self state JUMP', '   set self frame 0', 'endif', ''], 'lookRight': ['', 'set self lookboxname self.name + lookbox + self.lookboxnumber', 'set self lookboxnumber self.lookboxnumber + 1', 'create hitbox0 self.lookboxname self.x + self.w self.y', 'set self.lookboxname timer 10', 'set self.lookboxname return self.name', 'set self.lookboxname trigger seeright', 'set self.lookboxname w 256', 'set self.lookboxname h 32', ''], 'lookLeft': ['', 'set self lookboxname self.name + lookbox + self.lookboxnumber', 'set self lookboxnumber self.lookboxnumber + 1', 'create hitbox0 self.lookboxname self.x - 256 self.y', 'set self.lookboxname timer 10', 'set self.lookboxname return self.name', 'set self.lookboxname trigger seeleft', 'set self.lookboxname w 256', 'set self.lookboxname h 32', ''], 'checkCharge': ['', 'for name self.seeleft', '   if player in name', '      set self seeleft []', '      set self direction -1', '      set self state CHARGESTART', '      set self frame 0', '   endif', 'endfor', 'for name self.seeright', '   if player in name', '      set self seeright []', '      set self direction 1', '      set self state CHARGESTART', '      set self frame 0', '   endif', 'endfor', '']}, 'world1door': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self world1', '      view self.frame_name world1', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'world2door': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self world2', '      view self.frame_name world2', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'fart': {'START:0': ['', 'set self state FART', 'set self frame 0', ''], 'FART:16': ['', 'goodbye']}, 'walkoff': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self redpantshouse0', 'view self.frame_name redpantshouse0', 'set self respawnx self.x', 'set self respawny self.y', '']}, 'platformpurple': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'rootdoor': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self root', '      view self.frame_name root', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'antlerhat': {'START:0': ['', 'set self state LOCKED', ''], 'LOCKED:0': ['', 'set self frame 0', 'if inv0.antlers_unlock', '   set self state HAT', 'endif', ''], 'HAT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.hat != antlers', '      if related.state == HAT', '         rebrand antlers', '         set self hat anlers', '      endif', '   endif', 'endif']}, 'spike': {'START:0': ['', 'set self state SPIKE', 'set self rotation 0', 'set self direction -1', ''], 'SPIKE:0': ['', 'set self frame 0', 'hitboxes spike0', ''], 'HIT': ['', 'if self.can_die', '   set self state DEAD', '   set self frame 0', 'endif']}, 'player3': {'START:0': ['', 'if isframe MAIN3', '   set self _input_name PLAYER3', '   focus MAIN3 self', '   set self frame_name MAIN3', '   rebrand redpantsguy', '   set self tangible 1', '   set self respawnx self.x', '   set self respawny self.y', 'endif', 'if not isframe MAIN3', '   goodbye', 'endif']}, 'player2': {'START:0': ['', 'if isframe MAIN2', '   set self _input_name PLAYER2', '   focus MAIN2 self', '   set self frame_name MAIN2', '   rebrand redpantsguy', '   set self tangible 1', '   set self respawnx self.x', '   set self respawny self.y', 'endif', 'if not isframe MAIN2', '   goodbye', 'endif']}, 'shadowshoes': {'DANGLE:0': ['', 'if self.dangle_from', '   set self x_vel 0', '   set self y_vel 0', '   set self y self.dangle_from.y + self.dangle_from.h - 32', '   set self x self.dangle_from.x', '', '   if A_DOWN in inpEVENTS', '      set self state AIRIAL', '      set self frame 0', '      set self y_vel self.jumpstrength', '   endif', 'endif', ''], 'START:0': ['', '# welcome to red pants script :)', 'set self state IDLE', 'set self frame 0', 'set self speed 10', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self divestrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.3 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', 'hitboxes redpantsguy', 'hurtboxes redpantsguy', 'set self can_die 1', 'set self respawnx self.x', 'set self respawny self.y', 'set self rotation 0', 'set self door_key UP', '', 'set self width 32', 'set self height 64', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'exec checkAir', 'if self.x_vel != 0', '   set self state SLIDE', 'endif', 'if self.y_vel == 0', '   if not inpRIGHT and inpLEFT', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpLEFT and inpRIGHT', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpDOWN', '   if self.x_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.x_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.x_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self y_vel self.longjumpystrength', 'set self x_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.x_vel < self.negairspeedcontrol', 'if not self.calc1 and inpLEFT', '   set self x_vel self.x_vel - self.airdrift', 'endif', 'set self calc1 self.x_vel > self.airspeedcontrol', 'if not self.calc1 and inpRIGHT', '   set self x_vel self.x_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self x_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpRIGHT', 'set self calc2 self.direction == -1 nor inpLEFT', 'if inpRIGHT == inpLEFT or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.x_vel != 0', '   exec applyTraction', '   set self absxvel abs self.x_vel', '   if abs self.traction * 10 > self.absxvel', '      img shadowshoeslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpLEFT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpRIGHT', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', 'endif', 'if abs self.x_vel < self.speed', '   set self calc1 self.x_vel > 0 and inpRIGHT', '   set self calc1 not inpLEFT and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT', '      set self direction -1', '   endif', '   if not inpRIGHT and self.x_vel < 0 and inpLEFT or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.y_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.y_vel', 'if not self.calc1 nor self.calc2', '   if self.x_vel - self.airdrift > self.negspeed and inpLEFT', '\tset self x_vel self.x_vel - self.airdrift', '   endif', '   if self.x_vel + self.airdrift < self.speed and inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img shadowshoejump2', 'endif', 'if self.calc2', '   img shadowshoejump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self y_vel self.jumpstrength', 'endif', 'if not inpA', '   set self y_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec checkAir', 'exec applyTraction', 'if self.x_vel > 0', '   set self direction 1', 'endif', 'if self.x_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.x_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self x_vel self.divestrength * self.direction', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self y_vel self.rolloutstrength', 'endif', 'if self.x_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img shadowshoewalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self y_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self y_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self x_vel self.walljumpoff * self.direction', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self x_vel self.slideflipxmod * self.direction', 'set self y_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpLEFT', '      \tset self x_vel self.x_vel - self.airdrift', '\tif self.x_vel < self.negairspeedcontrol', '      \t   set self x_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpRIGHT', '      set self x_vel self.x_vel + self.airdrift', '      if self.x_vel > self.airspeedcontrol', '      \t set self x_vel self.airspeedcontrol', '      endif', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVE', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.x_vel > 0', '      set self direction 1', '   endif', '   if self.x_vel < 0', '      set self direction -1', '   endif', 'endif', ''], 'YCOLLISION': ['', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.y_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpDOWN', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif', '']}, 'moonmanR': {'DANGLE:0': ['', 'rebrand moonmanD', 'set self state DANGLE', 'exec DANGLE:0', ''], 'START:0': ['', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength -17', 'set self hopstrength -12', 'set self divestrength 14', 'set self rolloutstrength -8', 'set self bonkstrength 2', 'set self walljumpstrength -12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength -24', 'set self longjumpystrength -9', 'set self longjumpxstrength 12', '', 'set self rotation 90', 'set self can_die 1', '', 'set self width 64', 'set self height 32', '', 'if COLLIDE?', '   set self revert moonman + self.gravdir', 'endif', '', 'if not self.revert', '   set self gravdir R', 'endif', 'if self.revert', '   set self revert 0', '   rebrand moonman + self.gravdir', 'endif', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'set self door_key LEFT', 'exec checkAir', 'if self.y_vel != 0', '   set self state SLIDE', 'endif', 'if self.x_vel == 0', '   if not inpUP and inpDOWN', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpDOWN and inpUP', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpRIGHT', '   if self.y_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.y_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.y_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self x_vel self.longjumpystrength', 'set self y_vel self.longjumpxstrength * self.direction * -1', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.y_vel > self.airspeedcontrol', 'if not self.calc1 and inpDOWN', '   set self y_vel self.y_vel + self.airdrift', 'endif', 'set self calc1 self.y_vel < self.negairspeedcontrol', 'if not self.calc1 and inpUP', '   set self y_vel self.y_vel - self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self y_vel self.speed * self.direction  * -1', 'set self calc1 self.direction == 1 nor inpUP', 'set self calc2 self.direction == -1 nor inpDOWN', 'if inpUP == inpDOWN or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.y_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.y_vel != 0', '   exec applyTraction', '   set self absxvel abs self.y_vel', '   if abs self.traction * 10 > self.absxvel', '      img moonmanslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpDOWN', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpUP', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.y_vel > self.speed', '   set self calc1 self.y_vel > 0 and inpUP', '   set self calc1 not inpDOWN and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpUP and self.y_vel < 0 and inpDOWN', '      set self direction -1', '   endif', '   if not inpUP and self.y_vel < 0 and inpDOWN or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.x_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.x_vel', 'if not self.calc1 nor self.calc2', '   if self.y_vel - self.airdrift > self.negspeed and inpUP', '\tset self y_vel self.y_vel - self.airdrift', '   endif', '   if self.y_vel + self.airdrift < self.speed and inpDOWN', '      set self y_vel self.y_vel + self.airdrift', '   endif', '   if UP_DOWN in inpEVENTS', '      rebrand moonmanU', '   endif', '   if LEFT_DOWN in inpEVENTS', '      rebrand moonmanL', '   endif', '   if DOWN_DOWN in inpEVENTS', '      rebrand moonmanD', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img moonmanjump2', 'endif', 'if self.calc2', '   img moonmanjump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self x_vel self.jumpstrength', 'endif', 'if not inpA', '   set self x_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec applyTraction', 'exec applyGrav', 'if self.y_vel > 0', '   set self direction -1', 'endif', 'if self.y_vel < 0', '   set self direction 1', 'endif', ''], 'LANDING:5': ['', 'if self.y_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.y_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self y_vel self.divestrength * self.direction * -1', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self x_vel self.rolloutstrength', 'endif', 'if self.y_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img moonmanwalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self x_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self x_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self y_vel self.walljumpoff * self.direction * -1', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self y_vel self.slideflipxmod * self.direction * -1', 'set self x_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpDOWN', '      set self y_vel self.y_vel + self.airdrift', '      if self.y_vel > self.airspeedcontrol', '      \t set self y_vel self.airspeedcontrol', '      endif', '   endif', 'endif', 'if self.direction == 1', '   if inpUP', '      set self y_vel self.y_vel - self.airdrift', '      if self.y_vel < self.negairspeedcontrol', '         set self y_vel self.negairspeedcontrol', '      endif', '   endif', 'endif', ''], 'YCOLLISION': ['', 'if abs self.y_vel < 1', '   set self y_vel 0', 'endif', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self y_vel self.bonkstrength * self.direction', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.y_vel > 0', '      set self direction -1', '   endif', '   if self.y_vel < 0', '      set self direction 1', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVE', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'if abs self.x_vel < 1', '   set self x_vel 0', 'endif', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self x_vel 0', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.x_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self x_vel self.x_vel + self.grav', 'if self.x_vel > self.limit', '   set self x_vel self.limit', 'endif', 'if self.x_vel < self.neglimit', '   set self x_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.y_vel != 0', '   if self.y_vel > 0', '      set self y_vel self.traction + self.y_vel', '   endif', '   if self.y_vel < 0', '      set self y_vel self.traction * -1 + self.y_vel', '   endif', 'endif', 'if abs self.y_vel / 1 == 0', '   set self y_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpRIGHT', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif', '']}, 'coin': {'START:0': ['', 'set self state COIN', 'set self frame 0', 'set self collected 0', ''], 'COIN:0': ['', 'if self.collected', '   set self state COLLECT', '   set self frame 0', 'endif', ''], 'COIN:24': ['', 'set self frame 0', 'exec COIN:0', ''], 'COLLECT:0': ['', 'set self y self.y - 3', ''], 'COLLECT:20': ['', 'goodbye', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.name in inv0.collected == 0', '      add inv0.collected related.name', '      set inv0 coins inv0.coins + 1', '   endif', 'endif']}, 'platform': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'moonmanL': {'DANGLE:0': ['', 'rebrand moonmanD', 'set self state DANGLE', 'exec DANGLE:0', ''], 'START:0': ['', 'set self state IDLE', 'set self frame 0', 'set self speed 8', 'set self jumpstrength 17', 'set self hopstrength 12', 'set self divestrength 14', 'set self rolloutstrength 8', 'set self bonkstrength 2', 'set self walljumpstrength 12', 'set self walljumpoff 10', 'set self airdrift 0.7', 'set self traction 0.6 * -1', 'set self limit 20', 'set self airspeedcontrol 12', 'set self negairspeedcontrol self.airspeedcontrol * -1', 'set self negspeed self.speed * -1', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self slideflipxmod 3', 'set self slideflipstrength 24', 'set self longjumpystrength 9', 'set self longjumpxstrength 12', '', 'set self rotation 270', 'set self can_die 1', '', 'set self width 64', 'set self height 32', '', 'if COLLIDE?', '   set self revert moonman + self.gravdir', 'endif', '', 'if not self.revert', '   set self gravdir L', 'endif', 'if self.revert', '   set self revert 0', '   rebrand moonman + self.gravdir', 'endif', ''], 'DEAD:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self can_die 0', 'if self.frame % 4 == 0', '   create blood0 self.name + blood + self.bloodnumber self.x + 16 self.y + 16', '   set self bloodnumber self.bloodnumber + 1', 'endif', ''], 'DEAD:45': ['', 'set self state IDLE', 'self self frame 0', 'set self x self.respawnx', 'set self y self.respawny', 'set self can_die 1', ''], 'IDLE:0': ['', 'set self door_key RIGHT', 'exec checkAir', 'if self.y_vel != 0', '   set self state SLIDE', 'endif', 'if self.x_vel == 0', '   if not inpDOWN and inpUP', '      set self state RUNNING', '      set self frame 0', '      set self direction -1', '   endif', '   if not inpUP and inpDOWN', '      set self state RUNNING', '      set self frame 0', '      set self direction 1', '   endif', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec applyGrav', ''], 'IDLE:32': ['', 'exec IDLE:0', 'set self frame 0', ''], 'CROUCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', 'if not inpLEFT', '   if self.y_vel == 0', '      set self state IDLE', '      set self frame 0', '   endif', '   if self.y_vel != 0', '      set self state SLIDE', '      set self frame 0', '   endif', 'endif', '# bufferable pog?', 'if self.y_vel != 0 and inpA', '   set self state LONGJUMPSTART', '   set self frame 0', 'endif', 'set self frame 0', ''], 'LONGJUMPSTART:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'LONGJUMPSTART:2': ['', 'exec LONGJUMPSTART:0', 'set self x_vel self.longjumpystrength', 'set self y_vel self.longjumpxstrength * self.direction', 'set self state LONGJUMP', 'set self frame 0', ''], 'LONGJUMP:0': ['', 'exec applyGrav', 'set self calc1 self.y_vel < self.negairspeedcontrol', 'if not self.calc1 and inpUP', '   set self y_vel self.y_vel - self.airdrift', 'endif', 'set self calc1 self.y_vel > self.airspeedcontrol', 'if not self.calc1 and inpDOWN', '   set self y_vel self.y_vel + self.airdrift', 'endif', ''], 'RUNNING:0': ['', 'set self y_vel self.speed * self.direction', 'set self calc1 self.direction == 1 nor inpDOWN', 'set self calc2 self.direction == -1 nor inpUP', 'if inpDOWN == inpUP or self.calc1 or self.calc2', '   set self state SLIDE', '   set self frame 0', 'endif', 'exec checkCrouch', 'exec checkJump', 'exec checkPunch', 'exec checkAir', 'exec applyGrav', ''], 'RUNNING:16': ['', 'exec RUNNING:0', 'set self frame 0', ''], 'SLIDE:0': ['', 'if self.y_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', 'exec checkPunch', 'if self.y_vel != 0', '   exec applyTraction', '   set self absxvel abs self.y_vel', '   if abs self.traction * 10 > self.absxvel', '      img moonmanslide1', '   endif', '   exec checkCrouch', '   exec checkJump', '   if self.state == JUMPSQUAT', '      if self.direction == 1 and inpUP', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '      if self.direction == -1 and inpDOWN', '      \t set self state FLIPSQUAT', '\t set self frame 0', '      endif', '   endif', '   exec checkAir', '   exec applyGrav', 'endif', 'if abs self.y_vel < self.speed', '   set self calc1 self.y_vel > 0 and inpDOWN', '   set self calc1 not inpUP and self.calc1', '   if self.calc1', '      set self direction 1', '   endif', '   if not inpDOWN and self.y_vel < 0 and inpUP', '      set self direction -1', '   endif', '   if not inpDOWN and self.y_vel < 0 and inpUP or self.calc1', '      set self state RUNNING', '      set self frame 0', '   endif', 'endif', ''], 'AIRIAL:0': ['', 'set self calc1 self.x_vel > self.airspeedcontrol', 'set self calc2 self.airspeedcontrol * -1 > self.x_vel', 'if not self.calc1 nor self.calc2', '   if self.y_vel - self.airdrift > self.negspeed and inpUP', '\tset self y_vel self.y_vel - self.airdrift', '   endif', '   if self.y_vel + self.airdrift < self.speed and inpDOWN', '      set self y_vel self.y_vel + self.airdrift', '   endif', '   if UP_DOWN in inpEVENTS', '      rebrand moonmanU', '   endif', '   if RIGHT_DOWN in inpEVENTS', '      rebrand moonmanR', '   endif', '   if DOWN_DOWN in inpEVENTS', '      rebrand moonmanD', '   endif', '   if B_DOWN in inpEVENTS', '      set self state DIVESTART', '      set self frame 0', '   endif', 'endif', 'if self.calc1', '   img moonmanjump2', 'endif', 'if self.calc2', '   img moonmanjump0', 'endif', 'exec applyGrav', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'JUMPSQUAT:6': ['', 'set self state AIRIAL', 'if inpA', '   set self x_vel self.jumpstrength', 'endif', 'if not inpA', '   set self x_vel self.hopstrength', 'endif', 'set self frame 0', ''], 'LANDING:0': ['', 'exec applyTraction', 'exec applyGrav', 'if self.y_vel > 0', '   set self direction 1', 'endif', 'if self.y_vel < 0', '   set self direction -1', 'endif', ''], 'LANDING:5': ['', 'if self.y_vel', '   set self state SLIDE', '   exec SLIDE:0', 'endif', 'if self.y_vel == 0', '   set self state IDLE', '   exec IDLE:0', 'endif', ''], 'DIVESTART:0': ['', 'set self y_vel 0', 'set self x_vel 0', ''], 'DIVESTART:5': ['', 'set self y_vel self.divestrength * self.direction', 'set self state DIVE', ''], 'DIVE:0': ['', 'exec applyGrav', ''], 'DIVELAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', '# bufferable Pog?', 'if inpA', '   set self state ROLLOUT', '   set self frame 0', '   set self x_vel self.rolloutstrength', 'endif', 'if self.y_vel == 0', '   set self state IDLE', '   set self frame 0', 'endif', ''], 'ROLLOUT:0': ['', 'exec applyGrav', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'BONKLAND:25': ['', 'set self state IDLE', 'set self frame 0', ''], 'WALLTOUCH:0': ['', 'exec AIRIAL:0', 'set self state AIRIAL', 'if not self.calc1 nor self.calc2', '   img moonmanwalljump0', '   # bufferable pog?', '   if inpA', '      set self state WALLJUMP', '      set self frame 0', '   endif', 'endif', ''], 'WALLJUMP:0': ['', 'set self x_vel 0', ''], 'WALLJUMP:6': ['', 'set self state AIRIAL', 'set self frame 0', 'set self x_vel self.walljumpstrength', 'set self direction self.direction * -1', 'set self y_vel self.walljumpoff * self.direction', ''], 'FLIPSQUAT:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'FLIPSQUAT:6': ['', 'set self state SLIDEFLIP', 'set self direction self.direction * -1', 'set self y_vel self.slideflipxmod * self.direction', 'set self x_vel self.slideflipstrength', 'set self frame 0', ''], 'SLIDEFLIP:0': ['', 'exec applyGrav', 'if self.direction == -1', '   if inpUP', '      \tset self y_vel self.y_vel - self.airdrift', '\tif self.y_vel < self.negairspeedcontrol', '      \t   set self y_vel self.negairspeedcontrol', '   \tendif', '   endif', 'endif', 'if self.direction == 1', '   if inpDOWN', '      set self y_vel self.y_vel + self.airdrift', '      if self.y_vel > self.airspeedcontrol', '      \t set self y_vel self.airspeedcontrol', '      endif', '   endif', 'endif', ''], 'YCOLLISION': ['', 'if abs self.y_vel < 1', '   set self y_vel 0', 'endif', 'set self calc1 self.state == DIVE', 'set self calc1 self.state == DIVELAND or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == ROLLOUT or self.calc1', '   set self state BONK', '   set self x_vel self.bonkstrength * self.direction * -1', '   set self frame 0', 'endif', 'set self calc1 self.state == SLIDEFLIP', 'if self.state == AIRIAL or self.calc1', '   set self state WALLTOUCH', '   set self frame 0', '   if self.y_vel > 0', '      set self direction 1', '   endif', '   if self.y_vel < 0', '      set self direction -1', '   endif', 'endif', ''], 'PUNCH:0': ['', 'exec checkAir', 'exec applyTraction', 'exec applyGrav', ''], 'PUNCH:16': ['', 'set self state IDLE', 'set self frame 0', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'if related.state == DIVE', '   set self hit_x_vel 15 * related.direction', '   set self hit_y_vel -10', 'endif', 'if related.state == PUNCH', '   set self hit_x_vel 8 * related.direction', '   set self hit_y_vel -8', 'endif', '', 'if self.thwacks == None', '   set self thwacks 1', 'endif', '', 'if related.x <= self.x', '   set self thw_x related.x + related.w', 'endif', 'if related.x > self.x', '   set self thw_x related.x', 'endif', 'if related.y <= self.y', '   set self thw_y self.y + related.y - self.y', 'endif', 'if related.y > self.y', '   set self thw_y self.y + self.y - related.y', 'endif', '', 'create thwack0 self.name + thwack + self.thwacks self.thw_x self.thw_y', 'set self thwacks self.thwacks + 1', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'XCOLLISION': ['', 'if abs self.x_vel < 1', '   set self x_vel 0', 'endif', 'set self calc1 self.state == ROLLOUT', 'set self calc1 self.state == SLIDEFLIP or self.calc1', 'set self calc1 self.state == LONGJUMP or self.calc1', 'if self.state == AIRIAL or self.calc1', '   set self x_vel 0', '   set self state LANDING', '   set self frame 0', 'endif', 'if self.state == DIVE', '   set self state DIVELAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.state == PLATFORM', '   set self touched 1', 'endif', 'set self calc self.state == BANANA', 'set self calc self.state == CHEESE or self.calc', 'if self.state == COIN or self.calc', '   set self collected 1', 'endif', ''], 'checkAir': ['', 'set self dangle_from 0', 'if self.x_vel', '   set self state AIRIAL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self x_vel self.x_vel - self.grav', 'if self.x_vel > self.limit', '   set self x_vel self.limit', 'endif', 'if self.x_vel < self.neglimit', '   set self x_vel self.neglimit', 'endif', ''], 'applyTraction': ['', 'if self.y_vel != 0', '   if self.y_vel > 0', '      set self y_vel self.traction + self.y_vel', '   endif', '   if self.y_vel < 0', '      set self y_vel self.traction * -1 + self.y_vel', '   endif', 'endif', 'if abs self.y_vel / 1 == 0', '   set self y_vel 0', 'endif', ''], 'checkCrouch': ['', 'if inpLEFT', '   set self state CROUCH', '   set self frame 0', 'endif', ''], 'checkJump': ['', 'if A_DOWN in inpEVENTS', '   set self state JUMPSQUAT', '   set self frame 0', 'endif', ''], 'checkPunch': ['', 'if B_DOWN in inpEVENTS', '   set self state PUNCH', '   set self frame 0', 'endif', '']}, 'moonmanhat': {'START:0': ['', 'set self state LOCKED', ''], 'LOCKED:0': ['', 'set self frame 0', 'if inv0.moon_unlock', '   set self state HAT', 'endif', ''], 'HAT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if self.hat != moonman', '      if related.state == HAT', '         rebrand moonmanD', '\t set self hat moonman', '      endif', '   endif', 'endif']}, 'fireball': {'START:0': ['', 'set self speed 8', 'set self framelifespan 90', 'set self state FIREBALL', 'set self frame 0', 'hitboxes fireball', ''], 'FIREBALL:0': ['', 'set self x self.direction * self.speed + self.x', 'set self framelifespan self.framelifespan - 1', 'if self.framelifespan < 0', '   goodbye', 'endif', 'for _name COLLIDE?', '    if _name != self.creatorname', '       goodbye', '    endif', 'endfor', ''], 'FIREBALL:13': ['', 'set self frame 5', 'exec FIREBALL:0', ''], 'HIT': ['', 'if self.name != related.creatorname', '   set self state HITSTUN', '   set self frame 0', '   set self direction related.direction * -1', '   set self hit_x_vel 6 * related.direction', '   set self hit_y_vel -4', 'endif', '']}, 'letter': {'START:0': ['', 'set self frame 0', 'set self letter " "', 'set self state ASC', 'set self direction -1', 'set self timer -1', 'back', ''], 'ASC:0': ['', 'img self.letter', 'if self.frame % 2 == 0', '   set self y self.y - 1', 'endif', 'exec updateTimer', ''], 'ASC:4': ['', 'exec ASC:0', 'set self state DESC', 'set self frame 0', ''], 'DESC:0': ['', 'img self.letter', 'if self.frame % 2 == 0', '   set self y self.y + 1', 'endif', 'exec updateTimer', ''], 'DESC:4': ['', 'exec DESC:0', 'set self state ASC', 'set self frame 0', ''], 'updateTimer': ['', 'if self.timer != -1', '   if self.timer <= 0', '      goodbye', '   endif', '   set self timer self.timer - 1', 'endif', '']}, 'say': {'START:0': ['', 'set self message "WELCOME TO RED PANTS DELUXE 2"', 'set self state SAY', 'set self frame -1', 'set self timer 120', 'set self y_off 16', 'set self x_off 16', 'set self back backgroundsay0', ''], 'SAY:0': ['', 'if self.frame == 0 and self.back', '   create self.back self.name + back self.x self.y', '   set self calc countof self.message "^"', '   set self calc2 self.calc + 1', '   set self.name + back w len self.message * 16 + 98 // self.calc2', '   set self.name + back h self.calc * 20 + 64', '   set self.name + back timer len self.message + self.timer + 5', 'endif', '', 'set self calc self.message at self.frame == "^"', '', 'if self.calc', '   set self y_off self.y_off + 20', '   set self x_off 16', 'endif', '', 'if not self.calc', '   create letter0 self.name + letter + self.frame self.x + self.x_off self.y + self.y_off', '   set self.name + letter + self.frame letter self.message at self.frame', '   if self.timer != -1', '      set self.name + letter + self.frame timer self.timer', '   endif', 'set self x_off self.x_off + 16', 'endif', '', 'set self calc len self.message - 1', '', 'if self.calc == self.frame', '   goodbye', 'endif', '']}, 'sidefliptutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "RIGHT LEFT JUMP^ TO SIDE FLIP  "', '   set related.name + say + related.count back backgroundsay0', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'walljumptutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "HOLD DOWN JUMP FOR^BUFFER WALLJUMP"', '   set related.name + say + related.count back backgroundsay0', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'WOroot': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self root', 'if self.frame_name', '   view self.frame_name root', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'WOredpantshouse0': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self redpantshouse0', 'if self.frame_name', '   view self.frame_name redpantshouse0', '   set self respawnx self.x', '   set self respawny self.y', '']}, 'WOredpantshouse1': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self redpantshouse1', 'if self.frame_name', '   view self.frame_name redpantshouse1', '   set self respawnx self.x', '   set self respawny self.y', 'endif']}, 'rollouttutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "HOLD JUMP ON DIVE LAND^TO BUFFER ROLL OUT   "', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'divetutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:180': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "PUNCH IN THE^AIR TO DIVE"', '   set related.name + say + related.count back backgroundsay0', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'longjumptutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "HOLD CROUCH AND JUMP^  WHILE MOVING TO  ^  BUFFER LONG JUMP  "', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'shmoovetext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "KEEP ON SHMOOVIN"', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'doorrph3': {'START:0': ['', 'set self state DOOR', 'set self destination redpantshouse3', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'WOyard': {'START:0': ['', 'set self state WALKOFF', 'set self init 0', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name', '   view self.frame_name yard0', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'dooryard0': {'START:0': ['', 'set self state DOOR', 'set self destination yard0', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'WOyard1': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name', '   view self.frame_name yard1', '   set self respawnx self.x', '   set self respawny self.y', 'endif']}, 'WOredpantshouse2': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self redpantshouse2', 'if self.frame_name', '   view self.frame_name redpantshouse2', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'WOredpantshouse3': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self redpantshouse3', 'if self.frame_name', '   view self.frame_name redpantshouse3', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'doortutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "UP FOR DOORS"', '   set related count related.count + 1', '   set related state LAUNCHED', '   set related frame 0', 'endif', '']}, 'deathtutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "SOMETIMES YOU DIE^  BUT ITS COOL   "', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'platformtree': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', 'set self burnable 1', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0', ''], 'BURNING:45': ['', 'goodbye']}, 'window1': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'window0': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'widnow3': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'house': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'couchflip': {'START:0': ['', 'set self state LOOK', 'set self frame 0', 'set self direction -1', ''], 'LOOK:0': ['', 'set self frame 0']}, 'couch': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'television': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:8': ['', 'set self frame 0']}, 'televisionflip': {'START:0': ['', 'set self state LOOK', 'set self frame 0', 'set self direction -1', ''], 'LOOK:8': ['', 'set self frame 0']}, 'platformclouds': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'backgroundwood': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'fire2tutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   if self.hat == enflamed', '      create say0 related.name + say + related.count related.x related.y', '      set related.name + say + related.count message "HOLD DIRECTIONS^TO DEFLAME"', '      set related count related.count + 1', '      set related state LAUNCHED', '   endif', 'endif']}, 'firetutorialtext': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self count 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'LAUNCHED:160': ['', 'set self state WAIT', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == WAIT', '   create say0 related.name + say + related.count related.x related.y', '   set related.name + say + related.count message "FIRE BURNS"', '   set related count related.count + 1', '   set related state LAUNCHED', 'endif', '']}, 'backgroundcave': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'WOyard2': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self yard2', 'if self.frame_name', '   view self.frame_name yard2', '   set self respawnx self.x', '   set self respawny self.y', 'endif']}, 'WOyard3': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'move self yard3', 'if self.frame_name', '   view self.frame_name yard3', '   set self respawnx self.x', '   set self respawny self.y', 'endif']}, 'WOyard0from1': {'START:0': ['', 'set self state WALKOFF', 'set self init 0', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'take yard1 self', '']}, 'WOyard01inbtw': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'place self yard0', 'place self yard1', 'update yard0', 'update yard1', '']}, 'WOyard1from0': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'take yard0 self', 'if self.frame_name', '   view self.frame_name yard1', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'WOyard12inbtw': {'START:0': ['', 'set self state WALKOFF', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'place self yard2', 'place self yard1', 'update yard0', 'update yard2', '']}, 'WOyardto0from1': {'START:0': ['', '# to is _left, from is _right', 'set self _left yard1', 'set self _right yard0', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOinbetween': {'START:0': ['', 'set self state WALKOFF', 'set self init 0', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'set self calc background in self.name', 'set self calc self.noWO or self.calc', 'if not self.calc', '   if related.init', '      place self related.A', '      update related.A', '', '         place self related.B', '   \t update related.B', '   endif', 'endif']}, 'WOto': {'START:0': ['', 'set self state WALKOFF', 'set self init 0', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name and related.init', '   view self.frame_name related.to', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'WOfrom': {'START:0': ['', 'set self state WALKOFF', 'set self init 0', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.init', '   take related.from self', 'endif']}, 'WO': {'START:0': ['', '# to is _left, from is _right', 'print self.name', 'set self _left yard1', 'set self _right yard0', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOtoframe': {'START:0': ['', 'set self state WALKOFF', 'set self init 0', ''], 'WALKOFF:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name and related.init', '   view self.frame_name related.to', '   set self respawnx self.x', '   set self respawny self.y', 'endif', '']}, 'WOyardto1from0': {'START:0': ['', '# to is _left, from is _right', 'set self _left yard0', 'set self _right yard1', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOyardto3from0': {'START:0': ['', '# to is _left, from is _right', 'set self _left yard0', 'set self _right yard3', 'set self offset_left 64', 'set self offset_right 64', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOyardto2from1': {'START:0': ['', '# to is _left, from is _right', 'set self _left yard2', 'set self _right yard1', 'set self offset_left 64', 'set self offset_right 64', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOrph0_root': {'START:0': ['', '# to is _left, from is _right', 'set self _left redpantshouse0', 'set self _right root', 'set self offset_left 64', 'set self offset_right 64', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOrph1_rph0': {'START:0': ['', '# to is _left, from is _right', 'set self _left redpantshouse1', 'set self _right redpantshouse0', 'set self offset_left 64', 'set self offset_right 64', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOrph1_rph3': {'START:0': ['', '# to is _left, from is _right', 'set self _left redpantshouse1', 'set self _right redpantshouse3', 'set self offset_left 64', 'set self offset_right 64', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOrph2_rph1': {'START:0': ['', '# to is _left, from is _right', 'set self _left redpantshouse2', 'set self _right redpantshouse1', 'set self offset_left 48', 'set self offset_right 48', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'knight': {'START:0': ['', 'set self frame 0', 'set self state LOOK', 'set self limit 20', 'set self neglimit self.limit * -1', 'set self lookboxnumber 0', 'set self slashLeft []', 'set self slashRight []', 'set self jumpLeft []', 'set self jumpRight []', 'set self runLeft []', 'set self runRight []', 'set self grav 1', 'set self walkspeed 4', 'set self runspeed 8', 'set self bonkxmod -4', 'set self bonkymod -5', 'set self jumpatkxmod 6', 'set self jumpatkymod -6', 'hitboxes knight', 'hurtboxes knight', 'set self slashfxnumber 0', ''], 'LOOK:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'LOOK:3': ['', 'set self x_vel 0', 'exec clearLooks', 'exec lookLeft', 'exec lookRight', 'exec checkAir', 'exec applyGrav', ''], 'LOOK:4': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', 'exec checkSlash', 'exec checkJump', 'exec checkRun', ''], 'LOOK:60': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', 'set self state WALK', 'set self choice RAND?', 'if self.choice', '   set self direction -1', 'endif', 'if not self.choice', '   set self direction 1', 'endif', 'set self frame 0', ''], 'WALK:0': ['', 'exec checkAir', 'exec applyGrav', 'set self x_vel self.walkspeed * self.direction', ''], 'WALK:20': ['', 'exec WALK:0', 'set self frame 0', 'if RAND?', '   set self state LOOK', 'endif', ''], 'RUN:0': ['', 'exec checkAir', 'exec applyGrav', 'set self x_vel self.runspeed * self.direction', ''], 'RUN:1': ['', 'exec RUN:0', 'if self.direction == 1', '   exec runLookRight', 'endif', 'if self.direction == -1', '   exec runLookLeft', 'endif', ''], 'RUN:2': ['', 'exec RUN:0', 'exec checkRunningLook', ''], 'RUN:12': ['', 'exec RUN:1', ''], 'RUN:13': ['', 'exec RUN:2', ''], 'RUN:20': ['', 'exec RUN:2', 'set self frame 0', ''], 'RUNSLASH:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'RUNSLASH:12': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'RUNSLASH:20': ['', 'exec RUNSLASH:0', 'set self state LOOK', 'set self frame 0', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'BONKLAND:22': ['', 'exec checkAir', 'exec applyGrav', 'set self state LOOK', 'set self frame 0', ''], 'FALL:0': ['', 'exec applyGrav', ''], 'LAND:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'LAND:4': ['', 'exec checkAir', 'exec applyGrav', 'set self state LOOK', 'set self frame 0', ''], 'JUMPSQUAT:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'JUMPSQUAT:5': ['', 'exec JUMPSQUAT:0', 'set self state JUMPATK', 'set self frame 0', 'set self x_vel self.jumpatkxmod * self.direction', 'set self y_vel self.jumpatkymod', ''], 'SLASH:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'SLASH:25': ['', 'exec SLASH:0', 'set self frame 0', 'set self state LOOK', ''], 'JUMPATK:0': ['', 'exec applyGrav', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'HIT': ['', 'if self.can_die', '   set self state DEAD', '   set self frame 0', 'endif', 'if not self.can_die', '   set self state HITSTUN', '   set self frame 0', '   set self direction related.direction * -1', '   set self hit_x_vel 14 * related.direction', '   set self hit_y_vel -8', 'endif', 'create slashfx0 related.name + SLASH + related.slashfxnumber self.x self.y', 'set related.name + SLASH + related.slashfxnumber direction related.direction * -1', 'set related slashfxnumber related.slashfxnumber + 1', ''], 'XCOLLISION': ['', 'if self.state == WALK', '   set self direction self.direction * -1', 'endif', 'if self.state == RUN', '   set self state BONK', '   set self frame 0', '   set self y_vel self.bonkymod', '   set self x_vel self.bonkxmod * self.direction', 'endif', ''], 'YCOLLISION': ['', 'set self calc self.state == JUMPATK', 'if self.state == FALL or self.calc', '   set self state LAND', '   set self frame 0', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'checkAir': ['', 'if self.y_vel', '   set self state FALL', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'lookRight': ['', 'set self lookboxname self.name + slashLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x + self.w self.y', 'set self.lookboxname timer 30', 'set self.lookboxname return self.name', 'set self.lookboxname trigger slashRight', 'set self.lookboxname w 80', 'set self.lookboxname h self.h', 'set self lookboxname self.name + jumpLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x + self.w + 80 self.y', 'set self.lookboxname timer 30', 'set self.lookboxname return self.name', 'set self.lookboxname trigger jumpRight', 'set self.lookboxname w 100', 'set self.lookboxname h self.h', 'set self lookboxname self.name + runLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x + self.w + 180 self.y', 'set self.lookboxname timer 30', 'set self.lookboxname return self.name', 'set self.lookboxname trigger runRight', 'set self.lookboxname w 200', 'set self.lookboxname h self.h', 'set self lookboxnumber self.lookboxnumber + 1', ''], 'lookLeft': ['', 'set self lookboxname self.name + slashLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x - 80 self.y', 'set self.lookboxname timer 30', 'set self.lookboxname return self.name', 'set self.lookboxname trigger slashLeft', 'set self.lookboxname w 80', 'set self.lookboxname h self.h', 'set self lookboxname self.name + jumpLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x - 180 self.y', 'set self.lookboxname timer 30', 'set self.lookboxname return self.name', 'set self.lookboxname trigger jumpLeft', 'set self.lookboxname w 100', 'set self.lookboxname h self.h', 'set self lookboxname self.name + runLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x - 380 self.y', 'set self.lookboxname timer 30', 'set self.lookboxname return self.name', 'set self.lookboxname trigger runLeft', 'set self.lookboxname w 200', 'set self.lookboxname h self.h', 'set self lookboxnumber self.lookboxnumber + 1', ''], 'runLookRight': ['', 'set self lookboxname self.name + runningLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x + self.w + self.w self.y', 'set self.lookboxname timer 10', 'set self.lookboxname return self.name', 'set self.lookboxname trigger runningVision', 'set self.lookboxname w 100', 'set self.lookboxname h self.h', 'set self lookboxnumber self.lookboxnumber + 1', ''], 'runLookLeft': ['', 'set self lookboxname self.name + runningLookbox + self.lookboxnumber', 'create hitbox0 self.lookboxname self.x - self.w - 100 self.y', 'set self.lookboxname timer 10', 'set self.lookboxname return self.name', 'set self.lookboxname trigger runningVision', 'set self.lookboxname w 100', 'set self.lookboxname h self.h', 'set self lookboxnumber self.lookboxnumber + 1', ''], 'clearLooks': ['', 'set self slashLeft []', 'set self slashRight []', 'set self jumpLeft []', 'set self jumpRight []', 'set self runLeft []', 'set self runRight []', 'set self runningVision []', ''], 'checkSlash': ['', 'for name self.slashLeft', '    if name.can_die', '       exec clearLooks', '       set self direction -1', '       set self state SLASH', '       set self frame 0', '    endif', 'endfor', 'for name self.slashRight', '    if name.can_die', '       exec clearLooks', '       set self direction 1', '       set self state SLASH', '       set self frame 0', '    endif', 'endfor', ''], 'checkJump': ['', 'for name self.jumpLeft', '    if name.can_die', '       exec clearLooks', '       set self direction -1', '       set self state JUMPSQUAT', '       set self frame 0', '    endif', 'endfor', 'for name self.jumpRight', '    if name.can_die', '       exec clearLooks', '       set self direction 1', '       set self state JUMPSQUAT', '       set self frame 0', '    endif', 'endfor', ''], 'checkRun': ['', 'for name self.runLeft', '    if name.can_die', '       exec clearLooks', '       set self direction -1 ', '       set self state RUN', '       set self frame 0', '   endif', 'endfor', 'for name self.runRight', '    if name.can_die', '       exec clearLooks', '       set self direction 1', '       set self state RUN', '       set self frame 0', '    endif', 'endfor', ''], 'checkRunningLook': ['', 'for name self.runningVision', '    if name.can_die', '       exec clearLooks', '       set self state RUNSLASH', '       set self frame 0', '   endif', 'endfor', '']}, 'blood': {'START:0': ['', 'set self state BLOOD', 'set self frame 0', 'set self grav 0.5 + RAND?', 'set self y_vel -6 + RAND? + RAND? + RAND?', 'set self direction -1', 'if RAND?', '   set self direction 1', 'endif', 'set self x_vel 2 + RAND? + RAND? * self.direction * -1', ''], 'BLOOD:0': ['', 'if self.y_vel > 3', '   img blooddown', 'endif', 'if self.y_vel < -3', '   img bloodup', 'endif', 'set self x self.x + self.x_vel', 'set self y self.y + self.y_vel', 'set self y_vel self.y_vel + self.grav', ''], 'BLOOD:16': ['', 'goodbye']}, 'slashfx': {'START:0': ['', 'set self state SLASH', 'set self frame 0', 'set self x_vel 12', ''], 'SLASH:0': ['', 'set self mov self.x_vel * self.direction * -1', 'set self x self.x + self.mov', ''], 'SLASH:7': ['', 'goodbye']}, 'movingplatform': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self sticky 1', ''], 'PLATFORM:0': ['', '# set self x_vel 1', 'set self y_vel -1', ''], 'PLATFORM:30': ['', '# set self x_vel 1', 'set self y_vel 1', 'if self.frame == 60', '   set self frame 0', '   exec PLATFORM:0', 'endif', '']}, 'platformroad': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'WOcity0_yard2': {'START:0': ['', '# to is _left, from is _right', 'set self _left city0', 'set self _right yard2', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'grocerystore': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'dojo': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'lauchpad': {'START:0': ['', 'set self direction -1', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'WOcity1_city0': {'START:0': ['', '# to is _left, from is _right', 'set self _left city1', 'set self _right city0', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'milkbar': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'spikeL': {'START:0': ['', 'set self state SPIKE', 'set self rotation 90', 'set self direction -1', ''], 'SPIKE:0': ['', 'set self frame 0', 'hitboxes spike0', ''], 'HIT': ['', 'if self.can_die', '   set self state DEAD', '   set self frame 0', 'endif']}, 'spikeR': {'START:0': ['', 'set self state SPIKE', 'set self rotation 270', 'set self direction -1', ''], 'SPIKE:0': ['', 'set self frame 0', 'hitboxes spike0', ''], 'HIT': ['', 'if self.can_die', '   set self state DEAD', '   set self frame 0', 'endif']}, 'spikeU': {'START:0': ['', 'set self state SPIKE', 'set self rotation 180', 'set self direction -1', ''], 'SPIKE:0': ['', 'set self frame 0', 'hitboxes spike0', ''], 'HIT': ['', 'if self.can_die', '   set self state DEAD', '   set self frame 0', 'endif']}, 'platforminvis': {'START:0': ['', 'set self state WALL', 'set self frame 0', ''], 'WALL:0': ['', 'set self frame 0', '']}, 'platformskyscrape': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'inviswall': {'START:0': ['', 'set self state WALL', 'set self frame 0', ''], 'WALL:0': ['', 'set self frame 0', '']}, 'spring': {'START:0': ['', 'set self state SPRING', 'set self direction -1', 'set self strength -20', ''], 'SPRING:0': ['', 'set self frame 0', ''], 'SHOT:8': ['', 'set self state SPRING', 'set self frame 0', ''], 'COLLIDE': ['', 'set self y_vel related.strength', 'set related state SHOT', 'set related frame 0', '']}, 'springR': {'START:0': ['', 'set self state SPRING', 'set self direction -1', 'set self rotation 270', 'set self strength 20', ''], 'SPRING:0': ['', 'set self frame 0', ''], 'SHOT:8': ['', 'set self state SPRING', 'set self frame 0', ''], 'COLLIDE': ['', 'set self x_vel related.strength', 'set related state SHOT', 'set related frame 0', '']}, 'springL': {'START:0': ['', 'set self state SPRING', 'set self direction -1', 'set self rotation 90', 'set self strength -20', ''], 'SPRING:0': ['', 'set self frame 0', ''], 'SHOT:8': ['', 'set self state SPRING', 'set self frame 0', ''], 'COLLIDE': ['', 'set self x_vel related.strength', 'set related state SHOT', 'set related frame 0', '']}, 'springD': {'START:0': ['', 'set self state SPRING', 'set self direction -1', 'set self strength 20', 'set self rotation 180', ''], 'SPRING:0': ['', 'set self frame 0', ''], 'SHOT:8': ['', 'set self state SPRING', 'set self frame 0', ''], 'COLLIDE': ['', 'set self y_vel related.strength', 'set related state SHOT', 'set related frame 0', '']}, 'platformdojo': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'doorcity0': {'START:0': ['', 'set self state DOOR', 'set self destination city0', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'doordojo0': {'START:0': ['', 'set self state DOOR', 'set self destination dojo0', 'g'], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'backgrounddojo': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'doordojo1': {'START:0': ['', 'set self state DOOR', 'set self destination dojo1', 'back', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'scarecrow': {'START:0': ['', 'set self frame 0', 'set self state SCARECROW', 'hitboxes scarecrow', 'hurtboxes scarecrow', ''], 'SCARECROW:0': ['', 'set self frame 0', ''], 'HITSTUN:4': ['', 'set self state SCARECROW', 'set self frame 0', '']}, 'yamashitapoof': {'START:0': ['', 'set self state POOF', 'set self frame 0', ''], 'POOF:15': ['', 'goodbye']}, 'backgroundsay': {'START:0': ['', 'set self platform 1', 'set self state PLATFORM', 'set self timer -1', 'back', ''], 'PLATFORM:0': ['', 'if self.frame > self.timer', '    goodbye', 'endif']}, 'backgroundsayL': {'START:0': ['', 'set self platform 1', 'set self state PLATFORM', 'set self timer -1', 'back', ''], 'PLATFORM:0': ['', 'if self.frame > self.timer', '    goodbye', 'endif', '']}, 'backgroundsayR': {'START:0': ['', 'set self platform 1', 'set self state PLATFORM', 'set self timer -1', 'back', ''], 'PLATFORM:0': ['', 'if self.frame > self.timer', '    goodbye', 'endif', '']}, 'inv': {'START:0': ['', 'set self state INV', 'set self frame 0', '', 'set self collected []', 'set self coins 0', 'set self bananas 0', '', 'set self fighter_unlock 0', 'set self antlers_unlock 0', 'set self shoes_unlock 0', 'set self moon_unlock 0', '', 'set self breakroomlocked 1', ''], 'INV:0': ['', 'set self frame 0', '']}, 'yamashita': {'START:0': ['', 'set self state STAND', 'set self frame 0', 'set self jumpstr -16', 'set self grav 1', 'set self physics 1', 'set self shuffle 0', ''], 'STAND:16': ['', 'set self frame 0', 'set self direction self.direction * -1', 'exec shuffle?', ''], 'BOW:32': ['', 'set self frame 0', 'set self direction self.direction * -1', 'exec shuffle?', ''], 'SQUAT:9': ['', 'set self state JUMP', 'set self frame 0', 'set self y_vel self.jumpstr', ''], 'JUMP:0': ['', 'if self.y_vel > 0', '   img yamashitajump0', 'endif', 'if self.y_vel <= 0', '   img yamashitajump1', 'endif', 'set self y_vel self.y_vel + self.grav', ''], 'LAND:6': ['', 'set self state SQUAT', 'set self frame 0', 'exec shuffle?', ''], 'YCOLLISION': ['', 'if self.state == JUMP', '   set self state LAND', '   set self frame 0', 'endif', ''], 'shuffle?': ['', 'if self.shuffle', '   if RAND? and RAND?', '      set self state BOW', '   endif', '   if RAND? and RAND?', '      set self state SQUAT', '   endif', '   if RAND? and RAND?', '      set self state STAND', '      endif', 'endif', '']}, 'dojodoorcheck': {'START:0': ['', 'set self state LOOK', 'set self coinlimit 50', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'CHECK:0': ['', 'if self.frame == 1', '   exec onCheck', '   if inv0.coins >= self.coinlimit', '      exec onPass', '   endif', 'endif', ''], 'CHECK:200': ['', 'set self state LOOK', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == LOOK', '   if player in self.name', '      set related state CHECK', '      set self frame 0', '   endif', 'endif', ''], 'onCheck': ['', 'create say0 50centmessage yamashita0.x + 32 yamashita0.y - 96', 'set 50centmessage message "YOU NEED " + self.coinlimit + " CENTS    ^FOR BANDANA LESSONS    ^     ONLY HAVE " + inv0.coins', 'set 50centmessage back backgroundsayL0', ''], 'onPass': ['', 'set yamashita0 shuffle 1', 'create doordojo11 doordojo10 -10736 -832', 'set inv0 fighter_unlock 1', 'set inv0 coins inv0.coins - self.coinlimit', 'goodbye']}, 'dojotatsututorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename tatsututorial', 'set self message "WHILE IN THE AIR HOLD   ^BACK AND PRESS PUNCH   ^TO DO A WHIRLING KICK  "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x + 32 yamashita1.y - 96', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state STAND', '      set yamashita1 frame 0', '      set yamashita1 x -10736 + 256', '      set yamashita1 y -832', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojotatsutufliptorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename tatsufliptutorial', 'set self message "HOLD JUMP WHEN     ^WHIRLING INTO WALL^FOR COOL BACKFLIP      "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x + 32 yamashita1.y - 96', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state STAND', '      set yamashita1 frame 0', '      set yamashita1 x platformdojo11.x + 32', '      set yamashita1 y platformdojo11.y - 64', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojotatsucanceltutorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename tatsucanceltutorial', 'set self message "PRESS PUNCH WHILE WHIRLING^TO CANCEL INTO FLIP        "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita0.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita0.x + 32 yamashita0.y - 96', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita0 shuffle 0', '      set yamashita0 state WALL', '      set yamashita0 direction -1', '      set yamashita0 y_vel 0', '      set yamashita0 frame 0', '      set yamashita0 x related.x', '      set yamashita0 y related.y + 64', '      set yamashita0 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita0.x - 16 yamashita0.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojoshoryututorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename shoryututorial', 'set self message "HOLD UP AND PRESS PUNCH  ^FOR BIG JUMPING PUNCH  "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita0.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita0.x + 32 yamashita0.y - 96', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita0 shuffle 0', '      set yamashita0 state SQUAT', '      set yamashita0 frame 0', '      set yamashita0 x related.x', '      set yamashita0 y related.y + 288', '      set yamashita0 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita0.x - 16 yamashita0.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojoshoryuleantutorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename shoryuleantutorial', 'set self message "HOLD FORWARD AFTER^BIG JUMPING PUNCH^TO DRIFT IN           "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x + 32 yamashita1.y - 96', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state STAND', '      set yamashita1 y_vel 0', '      set yamashita1 frame 0', '      set yamashita1 x related.x', '      set yamashita1 y related.y + 128', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojoshoryuwalljumptutorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename shoryuwalljumptutorial', 'set self message "DRIFT IN    ^AND HOLD JUMP"', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x + 48 yamashita1.y - 16', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state WALL', '      set yamashita1 direction -1', '      set yamashita1 y_vel 0', '      set yamashita1 frame 0', '      set yamashita1 x related.x', '      set yamashita1 y related.y', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojoshoryuclosetutorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename shoryualmosttheretutorial', 'set self message "YOU CAN^DO IT  "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x - 180 yamashita1.y - 16', '      set related.messagename message related.message', '      set related.messagename back backgroundsayR0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state WALL', '      set yamashita1 direction 1', '      set yamashita1 y_vel 0', '      set yamashita1 frame 0', '      set yamashita1 x related.x + related.w - 32', '      set yamashita1 y related.y', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojoshoryuwelldonetutorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename shoryuwelldonetutorial', 'set self message "WELL DONE"', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x - 256 yamashita1.y - 32', '      set related.messagename message related.message', '      set related.messagename back backgroundsayR0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state BOW', '      set yamashita1 y_vel 0', '      set yamashita1 frame 0', '      set yamashita1 x related.x + related.w - 32', '      set yamashita1 y related.y + 64', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'dojofireballtutorial': {'START:0': ['', 'set self state NOTHERE', 'set self messagename fireballutorial', 'set self message "PUSH CROUCH FORWARD ^AND PUNCH TO SHOOT    ^A FIREBALL              "', ''], 'NOTHERE:0': ['', 'set self frame 0', ''], 'HERE:0': ['', 'if yamashita1.whereat != self.name', '   set self state NOTHERE', 'endif', 'set self frame 0', ''], 'LAUNCHED:200': ['', 'set self state HERE', ''], 'COLLIDE': ['', 'if related.state == HERE', '   if player in self.name', '      create say0 related.messagename yamashita1.x + 32 yamashita1.y - 128', '      set related.messagename message related.message', '      set related.messagename back backgroundsayL0', '      set related state LAUNCHED', '      set related frame 0', '   endif', 'endif', 'if related.state == NOTHERE', '   if player in self.name', '      set yamashita1 shuffle 0', '      set yamashita1 state STAND', '      set yamashita1 frame 0', '      set yamashita1 x related.x', '      set yamashita1 y related.y + 64', '      set yamashita1 whereat related.name', '      create yamashitapoof0 yamashitapoof yamashita1.x - 16 yamashita1.y', '      set related state HERE', '      set related frame 0', '   endif', 'endif', '']}, 'target': {'START:0': ['', 'set self state TARGET', 'hitboxes target', 'hurtboxes target', ''], 'TARGET:0': ['', 'set self frame 0', ''], 'BREAK:4': ['', 'goodbye', ''], 'HITSTUN:4': ['', 'set self state BREAK', 'set self frame 0', '']}, 'dojotargetcheck': {'START:0': ['', 'set self state LOOK', 'set self coinlimit 10', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'CHECK:0': ['', 'if self.frame == 1', '   exec onCheck', '   set self pass 1', '   for number range 31', '       if exists targetnumber', '       \t  set self pass 0', '       endif', '   endfor', '   if self.pass', '      exec onPass', '   endif', 'endif', ''], 'CHECK:200': ['', 'set self state LOOK', 'set self frame 0', ''], 'COLLIDE': ['', 'if related.state == LOOK', '   if player in self.name', '      if yamashita0.whereat != related.name', '\t set yamashita0 whereat related.name', '      \t create yamashitapoof0 yamashitapoof related.x - 16 -1184', '      endif', '      set related state CHECK', '      set self frame 0', '   endif', 'endif', ''], 'onCheck': ['', 'set yamashita0 x self.x', 'set yamashita0 y -1184', 'set yamashita0 state STAND', 'set yamashita0 shuffle 0', 'set yamashita0 y_vel 0', 'create say0 targetmessage yamashita0.x + 32 yamashita0.y - 96', 'set targetmessage message "BREAK ALL THE TARGETS^AND I WILL OPEN DOOR     "', 'set targetmessage back backgroundsayL0', ''], 'onPass': ['', 'set yamashita0 shuffle 1', 'create doordojo11 doordojo13 -10352 -1184', 'goodbye']}, 'platformgrocerywall': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'platformisle': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'doorgrocery0': {'START:0': ['', 'set self state DOOR', 'set self destination grocery0', 'g'], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'platformgrocerywindow': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'platformgrocerywindow\\': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'backgroundgrocery': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'customer': {'START:0': ['', 'set self frame 0', 'set self state RUN', 'set self physics 1', 'set self speed 5', 'set self lookboxnumber 0', 'set self turnaround 0', 'set self messageidx 0', 'set self messages []', 'add self.messages "I CANT FIND^THE YOGURT    "', 'add self.messages "WHERE IS THE^MAC AND CHEESE  "', 'add self.messages "I NEED MORE HAM"', 'add self.messages "DOES THIS PLACE^DO SMOOTHIES    "', 'set self messagecap len self.messages', 'set self shouldsay 1', 'set self saynumber 0', 'set self saytimer 0', 'set self coinnumber 0', 'set self coinlimit 5', 'hitboxes customer', 'hurtboxes customer', ''], 'RUN:0': ['', 'if self.saytimer', '   set self saytimer self.saytimer - 1', 'endif', 'if self.saytimer == 0', '   set self shouldsay 1', 'endif', 'set self x_vel self.direction * self.speed', 'set self turnaround 0', 'exec lookTurn', 'if not self.turnaround', '   set self state TURN', '   set self frame 0', 'endif', ''], 'RUN:18': ['', 'set self frame 0', 'exec RUN:0', ''], 'TURN:0': ['', 'set self x_vel 0', ''], 'TURN:8': ['', 'set self direction self.direction * -1', 'set self state RUN', 'set self frame 0', ''], 'BONK:0': ['', 'set self turnaround 0', 'exec lookTurn', 'if not self.turnaround', '   set self x_vel 0', 'endif', ''], 'BONK:10': ['', 'set self x_vel 0', ''], 'BONK:20': ['', 'set self state GETUP', 'set self frame 0', ''], 'GETUP:6': ['', 'set self state RUN', 'set self frame 0', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self direction self.direction * -1', 'set self state BONK', 'set self frame 0', 'set self x_vel 4 * self.direction', 'if self.coinnumber < self.coinlimit', '   create coinbouncy0 self.name + coinbouncy + self.coinnumber self.w / 2 + self.x self.y', '   set self coinnumber self.coinnumber + 1', 'endif', ''], 'XCOLLISION': ['', 'set self state TURN', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.shouldsay', '      set related sayname related.name + say + related.saynumber ', '      create say0 related.sayname related.w / 2 + related.x related.y - 48', '      set related.sayname message related.messages at related.messageidx', '      set related.sayname back backgroundsayL0', '      set related saynumber related.saynumber + 1', '      set related messageidx related.messageidx + 1', '      set related messageidx related.messageidx % related.messagecap', '      set related shouldsay 0', '      set related saytimer 160', '   endif', 'endif', ''], 'lookTurn': ['', 'set self old_x self.x', 'set self old_y self.y', 'set self old_w self.w', 'set self old_h self.h', 'set self y self.y + self.h', 'if self.direction == 1', '   set self x self.w / 2 + self.x', 'endif', 'set self w self.w / 2', 'set self h 32', 'set self turnaround COLLIDE?', 'set self x self.old_x', 'set self y self.old_y', 'set self w self.old_w', 'set self h self.old_h', '']}, 'customergirl': {'START:0': ['', 'set self frame 0', 'set self state RUN', 'set self physics 1', 'set self speed 5', 'set self lookboxnumber 0', 'set self turnaround 0', 'set self messageidx 0', 'set self messages []', 'add self.messages "IS THERE NO^MORE CHEESE   "', 'add self.messages "IS THIS MILK FRESH   "', 'add self.messages "DO THEY HAVE  ^ORGANIC SPAM"', 'add self.messages "I DONT LIKE THIS^BRAND OF PASTA   "', 'set self messagecap len self.messages', 'set self shouldsay 1', 'set self saynumber 0', 'set self saytimer 0', 'set self direction self.direction * -1', 'set self coinnumber 0', 'set self coinlimit 5', 'hitboxes customer', 'hurtboxes customer', ''], 'RUN:0': ['', 'if self.saytimer', '   set self saytimer self.saytimer - 1', 'endif', 'if self.saytimer == 0', '   set self shouldsay 1', 'endif', 'set self x_vel self.direction * self.speed', 'set self turnaround 0', 'exec lookTurn', 'if not self.turnaround', '   set self state TURN', '   set self frame 0', 'endif', ''], 'RUN:18': ['', 'set self frame 0', 'exec RUN:0', ''], 'TURN:0': ['', 'set self x_vel 0', ''], 'TURN:8': ['', 'set self direction self.direction * -1', 'set self state RUN', 'set self frame 0', ''], 'BONK:0': ['', 'set self turnaround 0', 'exec lookTurn', 'if not self.turnaround', '   set self x_vel 0', 'endif', ''], 'BONK:10': ['', 'set self x_vel 0', ''], 'BONK:20': ['', 'set self state GETUP', 'set self frame 0', ''], 'GETUP:6': ['', 'set self state RUN', 'set self frame 0', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self direction self.direction * -1', 'set self state BONK', 'set self frame 0', 'set self x_vel 4 * self.direction', 'if self.coinnumber < self.coinlimit', '   create coinbouncy0 self.name + coinbouncy + self.coinnumber self.w / 2 + self.x self.y', '   set self coinnumber self.coinnumber + 1', 'endif'], 'XCOLLISION': ['', 'set self state TURN', 'set self frame 0', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.shouldsay', '      set related sayname related.name + say + related.saynumber ', '      create say0 related.sayname related.w / 2 + related.x related.y - 48', '      set related.sayname message related.messages at related.messageidx', '      set related.sayname back backgroundsayL0', '      set related saynumber related.saynumber + 1', '      set related messageidx related.messageidx + 1', '      set related messageidx related.messageidx % related.messagecap', '      set related shouldsay 0', '      set related saytimer 160', '   endif', 'endif', ''], 'lookTurn': ['', 'set self old_x self.x', 'set self old_y self.y', 'set self old_w self.w', 'set self old_h self.h', 'set self y self.y + self.h', 'if self.direction == 1', '   set self x self.w / 2 + self.x', 'endif', 'set self w self.w / 2', 'set self h 32', 'set self turnaround COLLIDE?', 'set self x self.old_x', 'set self y self.old_y', 'set self w self.old_w', 'set self h self.old_h', '']}, 'coinbouncy': {'START:0': ['', 'set self state COIN', 'set self frame 0', 'set self physics 1', 'set self collected 0', 'set self y_vel -5 + RAND? + RAND?', 'set self x_vel 2 + RAND? + RAND?', 'set self grav 1 + RAND?', 'if RAND?', '   set self x_vel self.x_vel * -1', 'endif', ''], 'COIN:0': ['', 'if self.collected', '   set self state COLLECT', '   set self frame 0', 'endif', 'exec applyGrav', 'if self.x_vel', '   set self x_bounce_vel self.x_vel', 'endif', 'if self.y_vel', '   set self y_bounce_vel self.y_vel', 'endif', ''], 'COIN:24': ['', 'set self frame 0', 'exec COIN:0', ''], 'COLLECT:0': ['', 'set self x_vel 0', 'set self y_vel 0', 'set self y self.y - 3', ''], 'COLLECT:20': ['', 'goodbye', ''], 'XCOLLISION': ['', 'set self x_vel self.x_bounce_vel * -1', ''], 'YCOLLISION': ['', 'set self y_vel self.y_bounce_vel * -1', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.name in inv0.collected == 0', '      add inv0.collected related.name', '      set inv0 coins inv0.coins + 1', '   endif', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav']}, 'grocerystoretopper': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'doorgrocery1': {'START:0': ['', 'set self state DOOR', 'set self destination grocery1', 'g'], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'doorgrocery3': {'START:0': ['', 'set self state DOOR', 'set self destination grocery3', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      if inv0.breakroomlocked', '      \t create lockicon0 related.name + lockicon related.x + 24 related.y', '      endif', '      if not inv0.breakroomlocked', '      \t move self related.destination', '      \t view self.frame_name related.destination', '      \t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', 'endif', '']}, 'doorgrocery2': {'START:0': ['', 'set self state DOOR', 'set self destination grocery2', 'g'], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'groceryemployee': {'START:0': ['', 'set self frame 0', 'set self state WAIT', 'set self messageidx 0', 'set self messages []', 'add self.messages "IVE BEEN HERE ALL DAY  "', 'add self.messages "I WANNA GO HOME  "', 'add self.messages "GET ME OUTTA HERE  "', 'add self.messages "MY FEET HURT  "', 'set self messagecap len self.messages', 'set self saynumber 0', 'set self saytimer 0', 'set self counter 0', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'TALK:0': ['', 'set self counter self.counter - 1', 'if self.counter <= 0', '   set self state WAIT', 'endif', ''], 'TALK:8': ['', 'set self frame 0', 'exec TALK:0', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.state == WAIT', '      set related sayname related.name + say + related.saynumber ', '      create say0 related.sayname related.x + related.w related.y - 80', '      set related.sayname message related.messages at related.messageidx', '      set related.sayname back backgroundsayL0', '      set related saynumber related.saynumber + 1', '      set related messageidx related.messageidx + 1', '      set related messageidx related.messageidx % related.messagecap', '      set related state TALK', '      set related counter 160', '   endif', 'endif', '']}, 'grocerycashregister': {'START:0': ['', 'set self state WAIT ', 'set self direction -1', 'set self frame 0', 'set self coinnumber 0', 'set self coinlimit 12', 'hitboxes cashregister', 'hurtboxes cashregister', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', ''], 'BONK:0': ['', 'if self.coinnumber < self.coinlimit', '   create coinbouncy0 self.name + coinbouncy + self.coinnumber self.w / 2 + self.x self.y', '   set self coinnumber self.coinnumber + 1', 'endif', ''], 'BONK:4': ['', 'set self state WAIT', 'set self frame 0']}, 'groceryyogurt': {'START:0': ['', 'set self state WAIT', 'set self direction -1', 'set self frame 0', ''], 'WAIT:0': ['', 'set self frame 0']}, 'grocerycorn': {'START:0': ['', 'set self state WAIT', 'set self direction -1', 'set self frame 0', ''], 'WAIT:0': ['', 'set self frame 0']}, 'ventdojo0': {'START:0': ['', 'set self state DOOR', 'set self destination dojo0', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'ventnodoor': {'START:0': ['', 'set self state VENT', ''], 'VENT:0': ['', 'set self frame 0', '']}, 'lockicon': {'START:0': ['', 'set self state LOCK', 'set self frame 0', ''], 'LOCK:0': ['', 'set self y self.y - 3', ''], 'LOCK:15': ['', 'goodbye']}, 'breakroomsign': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'breakroomkey': {'START:0': ['', 'set self state KEY', 'set self frame 0', 'set self collected 0', 'set self direction -1', ''], 'KEY:0': ['', 'if self.collected', '   set self state COLLECT', '   set self frame 0', 'endif', ''], 'KEY:24': ['', 'set self frame 0', 'exec KEY:0', ''], 'COLLECT:0': ['', 'set self y self.y - 3', ''], 'COLLECT:20': ['', 'goodbye', ''], 'COLLIDE': ['', 'if player in self.name', '   if inv0.breakroomlocked', '      set related state COLLECT', '      set related frame 0', '      set inv0 breakroomlocked 0', '   endif', 'endif']}, 'boilerorange': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'boilerpink': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'milkbargate': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0', 'front', '']}, 'bouncer': {'START:0': ['', 'set self state STAND', 'set self frame 0', ''], 'STAND:0': ['', 'set self frame 0', ''], 'PEEK:72': ['', 'set self frame 0', 'set self state STAND', ''], 'COLLIDE': ['', 'if player in self.name', '   if related.state != PEEK', '      set related state PEEK', '      set related frame 0', '   endif', 'endif', '']}, 'rocketship': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'WOplains0_city1': {'START:0': ['', '# to is _left, from is _right', 'set self _left plains0', 'set self _right city1', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOcity1_highway0': {'START:0': ['', '# to is _left, from is _right', 'set self _left city1', 'set self _right highway0', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'highwayrailarrowbackground': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'highwayraildotsbackground': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'shadow': {'START:0': ['', 'set self state STAND', 'set self frame 0', 'set self jumpstr -40', 'set self grav 1.8', 'set self physics 1', 'set self mode STAND', 'set self speed 9', 'set self buffer 0', ''], 'STAND:0': ['', 'set self frame 0', 'set self x_vel 0', 'set self state self.mode', 'exec checkAir', 'exec applyGrav', ''], 'TALK:6': ['', 'set self frame 0', ''], 'RUN:0': ['', 'set self x_vel self.speed * self.direction', 'if self.state != self.mode', '   set self state self.mode', '   set self frame 0', 'endif', 'exec checkAir', 'exec applyGrav', ''], 'RUN:18': ['', 'set self buffer 0', 'set self frame 0', 'exec RUN:0', ''], 'JUMP:0': ['', 'exec applyGrav', ''], 'LAND:0': ['', '# pass', ''], 'LAND:8': ['', 'set self frame 0', 'set self buffer 0', 'set self state self.mode', 'exec checkAir', 'exec applyGrav', ''], 'YCOLLISION': ['', 'if self.state == JUMP', '   set self buffer 0', '   set self state LAND', '   set self frame 0', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', ''], 'checkAir': ['', 'if self.y_vel != 0', '   set self state JUMP', 'endif']}, 'triggershadowrunplayer': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'END:0': ['', 'goodbye', ''], 'COLLIDE': ['', 'if player in self.name', '   set shadow0 mode RUN', '   set related state END', 'endif', '']}, 'shadowjumptrigger': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if shadow in self.name', '   if self.buffer == 0', '      set self y_vel self.jumpstr', '   endif', '   set self buffer self.buffer + 1', 'endif', '']}, 'shadowturnaroundtrigger': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if shadow in self.name', '   if self.buffer == 0', '      set self direction self.direction * -1', '   endif', '   set self buffer self.buffer + 1', 'endif', '']}, 'warphome': {'START:0': ['', 'set self state OFF', 'set self destination fountain', 'set self partner warphomefrom0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'ON:9': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if related.state == ON', '      if self.door_key + _DOWN in inpEVENTS', '\t move self related.destination', '      \t view self.frame_name related.destination', '', '\t set self calcx related.x - self.x', '\t set self calcy related.y - self.y', '', '\t set self x warphomefrom0.x - self.calcx', '\t set self y warphomefrom0.y - self.calcy', '', '\t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', '   if related.state == OFF', '      set related state ON', '      set warphomefrom0 state ON', '   endif', 'endif', '']}, 'warphomefrom': {'START:0': ['', 'set self state OFF', 'set self destination yard3', 'set self partner warphome0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'ON:9': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if related.state == ON', '      if self.door_key + _DOWN in inpEVENTS', '      \t move self related.destination', '      \t view self.frame_name related.destination', '\t ', '\t set self calcx related.x - self.x', '\t set self calcy related.y - self.y', '', '\t set self x warphome0.x - self.calcx', '\t set self y warphome0.y - self.calcy', '', '      \t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', 'endif', '']}, 'warpgrocery': {'START:0': ['', 'set self state OFF', 'set self destination fountain', 'set self partner warpgroceryfrom0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'ON:9': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if related.state == ON', '      if self.door_key + _DOWN in inpEVENTS', '\t move self related.destination', '      \t view self.frame_name related.destination', '', '\t set self calcx related.x - self.x', '\t set self calcy related.y - self.y', '', '\t set self x warpgroceryfrom0.x - self.calcx', '\t set self y warpgroceryfrom0.y - self.calcy', '', '\t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', '   if related.state == OFF', '      set related state ON', '      set warpgroceryfrom0 state ON', '   endif', 'endif', '']}, 'warpgroceryfrom': {'START:0': ['', 'set self state OFF', 'set self destination grocery3', 'set self partner warpgrocery0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'ON:9': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if related.state == ON', '      if self.door_key + _DOWN in inpEVENTS', '      \t move self related.destination', '      \t view self.frame_name related.destination', '\t ', '\t set self calcx related.x - self.x', '\t set self calcy related.y - self.y', '', '\t set self x warpgrocery0.x - self.calcx', '\t set self y warpgrocery0.y - self.calcy', '', '      \t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', 'endif', '']}, 'pully': {'START:0': ['', 'set self platform 1', 'set self state PULLY', 'set self max_h self.h', ''], 'PULLY:0': ['', '# pass', ''], 'WAIT:0': ['', 'set self calc 1', 'for friend COLLIDE?', '    if friend.dangle_from == self.name', '       set self calc 0', '    endif', 'endfor', 'if self.calc', '   set self state DES', '   sedt self frame 0', 'endif', ''], 'DES:0': ['', '# pass', ''], 'DES:3': ['', 'if self.h < self.max_h', '   set self h self.h + 32', '   set self h min self.h self.max_h', 'endif', 'if self.h == self.max_h', '   set self state PULLY', 'endif', 'set self frame 0', ''], 'ASC:0': ['', '# pass', ''], 'ASC:3': ['', 'if self.h > 64', '   set self h self.h - 32', '   set self h max 64 self.h', 'endif', 'if self.h <= 64', '   set self state WAIT', 'endif', 'set self frame 0', ''], 'COLLIDE': ['', 'set self calc self.dangle_from != related.name', 'set self calc self.state != DANGLE and self.calc', 'if player in self.name and self.calc', '   if related.y + related.h - 48 < self.y', '      set self state DANGLE', '      set self frame 0', '      set self dangle_from related.name', '      set related state ASC', '      set related frame 0', '   endif', 'endif', '']}, 'robotbullet': {'START:0': ['', 'set self speed 8', 'set self framelifespan 160', 'set self state BULLET', 'set self frame 0', 'set self y_vel 8', 'hitboxes bullet', ''], 'BULLET:0': ['', 'set self x self.direction * self.speed + self.x', 'set self y self.y_vel + self.y', 'set self framelifespan self.framelifespan - 1', 'if self.framelifespan < 0', '   goodbye', 'endif', 'for _name COLLIDE?', '    if platform in _name', '       goodbye', '    endif', 'endfor', ''], 'BULLET:9': ['', 'set self frame 5', 'exec BULLET:0', ''], 'HIT': ['', 'if self.name != related.creatorname', '   set self state HITSTUN', '   set self frame 0', '   set self direction related.direction * -1', '   set self hit_x_vel 6 * related.direction', '   set self hit_y_vel -4', '   if self.can_die', '      set self state DEAD', '   endif', 'endif', '']}, 'robotsillL': {'START:0': ['', 'set self state WAIT', 'set self frame 0', 'set self bulletnumber 0', 'set self direction -1', 'hurtboxes robot', ''], 'WAIT:30': ['', 'set self state SHOOT', 'set self frame 0', ''], 'SHOOT:5': ['', 'create robotbullet0 self.name + bullet + self.bulletnumber self.w / 2 + self.x  self.y + 32', 'set self.name + bullet + self.bulletnumber creatorname self.name', 'set self.name + bullet + self.bulletnumber direction self.direction', 'set self bulletnumber self.bulletnumber + 1', ''], 'SHOOT:6': ['', '# pass', ''], 'SHOOT:10': ['', 'set self state WAIT', 'set self frame 0', ''], 'HITSTUN:9': ['', 'create coinbouncy0 self.name + coinbouncy + 0 self.w / 2 + self.x self.y', 'create coinbouncy0 self.name + coinbouncy + 1 self.w / 2 + self.x self.y', 'create coinbouncy0 self.name + coinbouncy + 2 self.w / 2 + self.x self.y', 'goodbye']}, 'robotsillR': {'START:0': ['', 'set self state WAIT', 'set self frame 0', 'set self bulletnumber 0', 'set self direction 1', 'hurtboxes robot', ''], 'WAIT:30': ['', 'set self state SHOOT', 'set self frame 0', ''], 'SHOOT:5': ['', 'create robotbullet0 self.name + bullet + self.bulletnumber self.w / 2 + self.x  self.y + 32', 'set self.name + bullet + self.bulletnumber creatorname self.name', 'set self.name + bullet + self.bulletnumber direction self.direction', 'set self bulletnumber self.bulletnumber + 1', ''], 'SHOOT:6': ['', '# pass', ''], 'SHOOT:10': ['', 'set self state WAIT', 'set self frame 0', ''], 'HITSTUN:9': ['', 'create coinbouncy0 self.name + coinbouncy + 0 self.w / 2 + self.x self.y', 'create coinbouncy0 self.name + coinbouncy + 1 self.w / 2 + self.x self.y', 'create coinbouncy0 self.name + coinbouncy + 2 self.w / 2 + self.x self.y', 'goodbye']}, 'robotwander': {'START:0': ['', 'set self state WANDER', 'set self frame 0', 'set self speed 4', 'set self near self.x', 'set self far self.x + self.w', 'set self w 64', 'set self bulletnumber 0', 'hurtboxes robot', 'set self physics 1', ''], 'WANDER:0': ['', 'set self x_vel self.speed * self.direction', 'if self.direction == 1', '   if self.x > self.far', '      set self direction self.direction * -1', '   endif', 'endif', 'if self.direction == -1', '   if self.x < self.near', '      set self direction self.direction * -1', '   endif', 'endif', ''], 'WANDER:30': ['', 'set self state SHOOT', 'set self frame 0', ''], 'SHOOT:5': ['', 'create robotbullet0 self.name + bullet + self.bulletnumber self.w / 2 + self.x  self.y + 32', 'set self.name + bullet + self.bulletnumber creatorname self.name', 'set self.name + bullet + self.bulletnumber direction self.direction', 'set self bulletnumber self.bulletnumber + 1', ''], 'SHOOT:6': ['', '# pass', ''], 'SHOOT:10': ['', 'set self state WANDER', 'set self frame 0', ''], 'HITSTUN:9': ['', 'create coinbouncy0 self.name + coinbouncy + 0 self.w / 2 + self.x self.y', 'create coinbouncy0 self.name + coinbouncy + 1 self.w / 2 + self.x self.y', 'create coinbouncy0 self.name + coinbouncy + 2 self.w / 2 + self.x self.y', 'goodbye']}, 'shadowgreeting': {'START:0': ['', 'set self state LOOK', 'set self messages []', 'add self.messages "YES ITS REALLY ME"', 'add self.messages "I PROBABLY SHOULDNT HAVE  ^TOO MUCH SCREEN TIME  "', 'add self.messages "MARIA  "', 'set self messagecap len self.messages', 'set self messageidx 0', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'SAY:100': ['', 'set shadow0 state STAND', 'set shadow0 frame 0', 'if self.messageidx == self.messagecap', '   set shadow0 mode RUN', '   set self state OVER', 'endif', ''], 'SAY:145': ['', 'set self state LOOK', 'set self frame 0', ''], 'OVER:0': ['', 'goodbye', ''], 'COLLIDE': ['', 'if related.state == LOOK', '   if player in self.name', '      if related.messageidx < related.messagecap', '         set shadow0 state TALK', '         set shadow0 frame 0', '         set related state SAY', '         set related frame 0', '         create say0 shadowgreeting shadow0.x + 32 shadow0.y - 96', '         set shadowgreeting message related.messages at related.messageidx', '         set shadowgreeting timer 90', '         set related messageidx related.messageidx + 1', '         if related.messageidx == related.messagecap', '      \t    set shadow0 state GRIMACE', '         endif', '         set shadowgreeting back backgroundsayL0', '      endif', '   endif', 'endif', '']}, 'WOhighway0_highway1': {'START:0': ['', '# to is _left, from is _right', 'set self _left highway0', 'set self _right highway1', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'shadowraceya': {'START:0': ['', 'set self state LOOK', 'set self frame 0', 'set self messages []', 'add self.messages "WANNA RACE TO THE TOP"', 'add self.messages "I BET MY COOL HOVER   ^SHOES THAT I WIN    "', 'add self.messages "READYSETGO"', 'set self messagecap len self.messages', 'set self messageidx 0', 'set self messages2 []', 'add self.messages2 "WOW YOU REALLY BEAT ME    "', 'add self.messages2 "ALRIGHT AS PROMISED     "', 'set self messagecap2 len self.messages2', 'set self messageidx2 0', ''], 'LOOK:0': ['', 'set self frame 0', ''], 'ACTIVATED:0': ['', 'set self frame 0', ''], 'SAY2:0': ['', 'if self.messageidx2 == self.messagecap2', '   set inv0 shoes_unlock 1', 'endif', ''], 'SAY2:2': ['', '# pass', ''], 'SAY2:100': ['', 'set shadow0 state STAND', 'set shadow0 mode STAND', 'if self.messageidx2 == self.messagecap2', '   goodbye', 'endif', ''], 'SAY2:145': ['', 'set self state DONE', 'set self frame 0', ''], 'SAY:0': ['', 'if self.messageidx == self.messagecap', '   set raceflag0 state RACE', '   if shadow0.buffer == 0', '      set shadow0 mode RUN', '      set shadow0 direction 1', '      set shadow0 state RUN', '      set shadow0 buffer shadow0.buffer + 1', '   endif', 'endif', ''], 'SAY:2': ['', '# pass', ''], 'SAY:100': ['', 'if self.messageidx != messagecap', '   set shadow0 state shadow0.mode', '   set shadow0 frame 0', 'endif', ''], 'SAY:145': ['', 'set self state ACTIVATED', 'set self frame 0', 'if self.messageidx == self.messagecap', '   set self state LOOK', '   set self messageidx 0', 'endif', ''], 'DONE:0': ['', '# pass', ''], 'COLLIDE': ['', 'if related.state == LOOK', '   if shadow in self.name', '      if self.buffer == 0', '      \t set self mode STAND', '\t set self x_vel 0', '\t set related state ACTIVATED\t ', '      endif', '      set self buffer 0', '      if raceflag0.state == REDPANTS', '      \t set related state DONE', '      endif', '   endif', 'endif', 'if related.state == ACTIVATED', '   if player in self.name', '      set raceflag0 state RACE', '      set shadow0 state TALK', '      set shadow0 frame 0', '      set related state SAY', '      set related frame 0', '      create say0 shadowgreeting shadow0.x + 32 shadow0.y - 96', '      set shadowgreeting message related.messages at related.messageidx', '      set shadowgreeting timer 90', '      set related messageidx related.messageidx + 1', '      set shadowgreeting back backgroundsayL0', '   endif', 'endif', 'if related.state == DONE', '   if player in self.name', '      set shadow0 state TALK', '      set shadow0 frame 0', '      set related state SAY2', '      set related frame 0', '      create say0 shadowgreeting shadow0.x + 32 shadow0.y - 96', '      set shadowgreeting message related.messages2 at related.messageidx2', '      set shadowgreeting timer 90', '      set related messageidx2 related.messageidx2 + 1', '      set shadowgreeting back backgroundsayL0', '   endif', 'endif', '']}, 'raceflag': {'START:0': ['', 'set self direction 1', 'set self state WAIT', ''], 'COLLIDE': ['', 'if related.state == RACE', '   if shadow in self.name', '      set related state SHADOW', '      set related frame 0', '   endif', '   if player in self.name', '      set related state REDPANTS', '      set related frame 0', '   endif', 'endif']}, 'pigman': {'START:0': ['', 'set self frame 0', 'set self state STAND', 'set self limit 20', 'set self neglimit self.limit * -1', 'set self lookboxnumber 0', 'set self arrownumber 0', 'set self grav 1', 'set self jumpstrength -6', 'set self runspeed 7', 'set self scared []', 'hurtboxes pigman', ''], 'STAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', 'for name self.scared', '   if player in name', '      set self state SCARE', '      set self frame 0', '      if self.x < name.x', '      \t set self direction -1', '      endif', '      if self.x > name.x', '      \t set self direction 1', '      endif', '   endif', 'endfor', 'if self.scared', '   set self scared []', 'endif', ''], 'STAND:30': ['', 'set self frame 0', 'exec lookNear', 'exec lookFar', 'exec STAND:0', ''], 'SCARE:14': ['', 'set self state RUN', 'set self frame 0', ''], 'RUN:0': ['', 'set self x_vel self.runspeed * self.direction', 'exec checkAir', 'exec applyGrav', ''], 'RUN:11': ['', 'set self frame 0', 'exec RUN:0', 'if RAND? and RAND?', '   set self state JUMPSTART', 'endif', ''], 'JUMPSTART:0': ['', 'exec checkAir', 'exec applyGrav', ''], 'JUMPSTART:4': ['', 'set self state JUMP', 'set self frame 0', 'set self y_vel self.jumpstrength', ''], 'JUMP:0': ['', 'exec applyGrav', ''], 'JUMP:3': ['', 'set self frame 0', 'exec JUMP:0', ''], 'LAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'LAND:6': ['', 'set self state STAND', 'set self frame 0', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'BONKLAND:8': ['', 'set self state RUN', 'set self direction self.direction * -1', 'set self frame 0', ''], 'SHOOTDRAW:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'SHOOTDRAW:10': ['', 'exec SHOOTDRAW:0', 'exec fireArrow', 'set self state SHOOTRELEASE', 'set self frame 0', ''], 'SHOOTRELEASE:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'SHOOTRELEASE:10': ['', 'exec SHOOTRELEASE:0', 'set self state STAND', 'set self frame 0', ''], 'SHOOTDRAWUP:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'SHOOTDRAWUP:10': ['', 'exec SHOOTDRAWUP:0', 'exec fireArrowUp', 'set self state SHOOTRELEASEUP', 'set self frame 0', ''], 'SHOOTRELEASEUP:0': ['', 'set self x_vel 0', 'exec checkAir', 'exec applyGrav', ''], 'SHOOTRELEASEUP:10': ['', 'exec SHOOTRELEASEUP:0', 'set self state STAND', 'set self frame 0', ''], 'XCOLLISION': ['', 'if self state == RUN', '   set self state BONK', '   set self x_vel self.x_vel * -1', '   set self y_vel -4', '   set self frame 0', 'endif', 'if self.state == JUMP', '   set self state BONK', '   set self x_vel self.x_vel * -1', '   set self y_vel 4', '   set self frame 0', 'endif', ''], 'YCOLLISION': ['', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', 'if self.state == JUMP', '   set self state LAND', '   set self frame 0', 'endif', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'set self hit_x_vel 8 * related.direction', 'set self hit_y_vel -6', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', ''], 'checkAir': ['', 'if self.y_vel', '   set self state JUMP', '   set self frame 0', 'endif', ''], 'lookNear': ['', 'set self lookboxname self.name + lookbox + self.lookboxnumber', 'set self lookboxnumber self.lookboxnumber + 1', 'create hitbox0 self.lookboxname self.x - 256 self.y', 'set self.lookboxname timer 10', 'set self.lookboxname return self.name', 'set self.lookboxname trigger scared', 'set self.lookboxname w 512', 'set self.lookboxname h 32', ''], 'lookFar': ['', 'set self target 0', 'if inworld player10 ', '   set self target player10', 'endif', 'if inworld player20', '   set self target player20', 'endif', 'if inworld player30', '   set self target player30', 'endif', 'if inworld player40', '   set self target player40', 'endif', 'if self.target', '   if self.target.x > self.x', '      set self direction 1', '   endif', '   if self.target.x < self.x', '      set self direction -1', '   endif', '   set self dist self.x - self.target.x', '   set self dist abs self.dist', '   set self state SHOOTDRAW', '   if self.dist > 330', '      set self state SHOOTDRAWUP', '   endif', '   set self frame 0', 'endif', ''], 'fireArrow': ['', 'set self arrowname self.name + arrow + self.arrownumber', 'set self arrownumber self.arrownumber + 1', 'if self.direction == 1', '   set self arrowx self.x + self.w', 'endif', 'if self.direction == -1', '   set self arrowx self.x', 'endif', 'create arrow0 self.arrowname self.arrowx self.y + 16', 'set self.arrowname x_vel 18 * self.direction', 'set self.arrowname y_vel -8', 'set self.arrowname direction self.direction * -1', ''], 'fireArrowUp': ['', 'set self arrowname self.name + arrow + self.arrownumber', 'set self arrownumber self.arrownumber + 1', 'if self.direction == 1', '   set self arrowx self.x + self.w', 'endif', 'if self.direction == -1', '   set self arrowx self.x', 'endif', 'create arrow0 self.arrowname self.arrowx self.y', 'set self.arrowname x_vel 18 * self.direction', 'set self.arrowname y_vel -15', 'set self.arrowname direction self.direction  * -1', '']}, 'arrow': {'START:0': ['', 'set self physics 1', 'set self state ARROW', 'set self frame 0', 'set self grav 1', 'hitboxes arrow', ''], 'ARROW:0': ['', 'set self choice 1', 'if self.y_vel < -8 and self.choice', '   set self image arrowup2', '   set self choice 0', 'endif', 'if self.y_vel < -5 and self.choice', '   set self image arrowup1', '   set self choice 0', 'endif', 'if self.y_vel < -2 and self.choice', '   set self image arrowup0', '   set self choice 0', 'endif', 'if self.y_vel < 2 and self.choice', '   set self image arrowflat', '   set self choice 0', 'endif', 'if self.y_vel < 5 and self.choice', '   set self image arrowdown0', '   set self choice 0', 'endif', 'if self.y_vel < 8 and self.choice', '   set self image arrowdown1', '   set self choice 0', 'endif', 'if self.y_vel >= 8 and self.choice', '   set self image arrowdown2', '   set self choice 0', 'endif', 'img self.image', 'exec applyGrav', ''], 'STOP:0': ['', 'img self.image', 'set self x_vel 0', 'set self y_vel 0', ''], 'STOP:20': ['', 'goodbye', ''], 'HIT': ['', 'set self calc pig in self.name', 'if not self.calc', '   set related state STOP', '   set related frame 0', '   if self.can_die', '      set self state DEAD', '      set self frame 0', '   endif', '   if not self.can_die', '      set self state HITSTUN', '      set self frame 0', '      set self direction related.direction', '      set self hit_x_vel 5 * related.direction * -1', '      set self hit_y_vel -3', '   endif', 'endif', ''], 'XCOLLISION': ['', 'set self state STOP', 'set self frame 0', ''], 'YCOLLISION': ['', 'set self state STOP', 'set self frame 0', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', '']}, 'backgroundbowlingbanner': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'platformbowling': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', ''], 'PLATFORM:0': ['', 'set self frame 0']}, 'bowlingman': {'START:0': ['', '# set self frame_name MAIN', '# set self _input_name PLAYER1', 'set self state WAIT', 'set self speed 3', 'set self minspeed 3', 'set self maxspeed 12', 'set self throw_angle 0', 'set self cycles 0', 'set self cycle_to_throw 3', ''], 'STAND:0': ['', 'set self frame 0', 'if inpRIGHT', '   set self state RUNREADY', 'endif', ''], 'RUNREADY:0': ['', 'exec RUN:0', ''], 'RUNREADY:16': ['', 'exec RUN:0', 'set self state RUN', 'set self frame 0', ''], 'RUN:0': ['', 'set self x_vel self.speed', 'if self.frame % 2 == 0', '   if inpRIGHT', '      set self speed self.speed + 1', '      set self speed min self.speed self.maxspeed', '   endif', '   if inpLEFT', '      set self speed self.speed - 1', '      set self speed max self.speed self.minspeed', '   endif', 'endif', ''], 'RUN:16': ['', 'exec RUN:0', 'set self frame 0', 'set self cycles self.cycles + 1', 'if self.cycles >= self.cycle_to_throw', '   exec updateThrowAngle', '   exec updateThrowState', 'endif', ''], 'THROWLOW:0': ['', 'exec updateThrowAngle', 'exec updateThrowState', ''], 'THROWMED:0': ['', 'exec updateThrowAngle', 'exec updateThrowState', ''], 'THROWHIGH:0': ['', 'exec updateThrowAngle', 'exec updateThrowState', ''], 'THROWLOW:11': ['', 'create bowlinggoose0 bowlingball self.x self.y', 'set bowlingball speed self.speed * 2', 'set bowlingball x_vel self.speed * 2', 'set bowlingball y_vel -2', ''], 'THROWMED:11': ['', 'create bowlinggoose0 bowlingball self.x self.y', 'set bowlingball speed self.speed * 1.5', 'set bowlingball x_vel self.speed * 1.5', 'set bowlingball y_vel -15', ''], 'THROWHIGH:11': ['', 'create bowlinggoose0 bowlingball self.x self.y', 'set bowlingball speed self.speed', 'set bowlingball x_vel self.speed', 'set bowlingball y_vel -30', ''], 'THROWLOW:12': ['', 'set self x_vel 0', ''], 'THROWMED:12': ['', 'set self x_vel 0', ''], 'THROWHIGH:12': ['', 'set self x_vel 0', ''], 'updateThrowState': ['', 'if self.throw_angle == -1', '   set self state THROWLOW', 'endif', 'if self.throw_angle == 0', '   set self state THROWMED', 'endif', 'if self.throw_angle == 1', '   set self state THROWHIGH', 'endif', ''], 'updateThrowAngle': ['', 'set self throw_angle 0', 'if inpDOWN', '   set self throw_angle -1', 'endif', 'if inpUP', '   set self throw_angle 1', 'endif', '']}, 'bowlinggoose': {'START:0': ['', 'set self frame 0', 'set self state BALLSTART', 'set self limit 25', 'set self neglimit self.limit * -1', 'set self grav 1', 'set self last_y_vel 0', 'set self second_last_y_vel 0', 'set self hasfocus 1', 'set self speed 4', ''], 'LOOK:0': ['', 'if bowlingmanager0.state == WAIT', '   set bowlingmanager0 state TIMER', '   set bowlingmanager0 frame 0', 'endif', 'exec applyGrav', ''], 'LOOK:68': ['', 'set self frame 0', ''], 'BALLSTART:0': ['', 'exec BALL:0', ''], 'BALLSTART:12': ['', 'set self state BALL', 'set self frame 0', 'exec BALL:0', ''], 'BALL:0': ['', 'set self x_vel self.speed', 'set self second_last_y_vel self.last_y_vel', 'set self last_y_vel self.y_vel', 'exec applyGrav', ''], 'BALL:8': ['', 'set self frame 0', 'exec BALL:0', ''], 'BONK:0': ['', 'exec applyGrav', ''], 'BONKLAND:0': ['', 'set self x_vel 0', 'exec applyGrav', ''], 'BONKLAND:8': ['', 'set self state LOOK', 'set self frame 0', ''], 'XCOLLISION': ['', 'set self state BONK', 'set self x_vel self.x_vel * -1', 'set self y_vel 4', 'set self frame 0', ''], 'YCOLLISION': ['', 'set self calc self.state != LOOK', 'if self.state != BONK and self.calc', '   set self c1 self.last_y_vel * -1', '   set self c2 self.second_last_y_vel * -1', '   if min self.c1 self.c2 < 0', '      set self y_vel min self.c1 self.c2', '   endif', 'endif', 'if self.state == BONK', '   set self state BONKLAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if pin in self.name and related.hasfocus', '   set bowlingmanager0 focus self.name', '   set bowlingmanager0 state BONK', 'endif', ''], 'HIT': ['', 'set self state HITSTUN', 'set self frame 0', 'set self direction related.direction * -1', 'set self hit_x_vel 8 * related.direction', 'set self hit_y_vel -6', ''], 'HITSTUN:0': ['', 'set self x_vel 0', 'set self y_vel 0', ''], 'HITSTUN:4': ['', 'set self state BONK', 'set self frame 0', 'set self x_vel self.hit_x_vel', 'set self y_vel self.hit_y_vel', 'set self hit_x_vel 0', 'set self hit_y_vel 0', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', 'if self.y_vel > self.limit', '   set self y_vel self.limit', 'endif', 'if self.y_vel < self.neglimit', '   set self y_vel self.neglimit', 'endif', '']}, 'bowlingpin': {'START:0': ['', 'set self state STILL', 'set self frame 0', 'set self grav 1', 'set self traction 0.8 * -1', 'set self unscored 1', ''], 'FALLING:0': [']', 'exec applyGrav', ''], 'FALLING:16': ['', 'exec FALLING:0', 'set self frame 0', ''], 'LAND:0': ['', 'exec checkAir', 'exec applyGrav', 'exec applyTraction', ''], 'LAND:20': ['', 'goodbye', ''], 'YCOLLISION': ['', 'if self.state != LAND', '   set self state LAND', '   set self frame 0', 'endif', ''], 'COLLIDE': ['', 'if self.tangible', '   if related.unscored', '      set related unscored 0', '      set bowlingmanager0 score bowlingmanager0.score + 1', '   endif', '   if related.state == STILL', '      set related state FALLING', '      set related frame 0', '      set related x_vel max self.x_vel related.x_vel', '      set related y_vel abs self.y_vel * -1', '   endif', 'endif', ''], 'applyGrav': ['', 'set self y_vel self.y_vel + self.grav', ''], 'checkAir': ['', 'if self.y_vel != 0', '   set self state FALLING', '   set self frame 0', 'endif', ''], 'applyTraction': ['', 'if self.x_vel != 0', '   if self.x_vel > 0', '      set self x_vel self.traction + self.x_vel', '   endif', '   if self.x_vel < 0', '      set self x_vel self.traction * -1 + self.x_vel', '   endif', 'endif', 'if abs self.x_vel / 1 == 0', '   set self x_vel 0', 'endif']}, 'bowlingmanager': {'START:0': ['', 'set self player_turn 0', 'set self rolls 2', 'set self players []', 'set self frames []', 'set self setUps []', 'set self pins []', '', 'set self bowler_start_x -848', 'set self bowler_start_y 768', '', 'set self bowler_say_x -848 - 64', 'set self bowler_say_y 768 - 80', 'set self score 0', '', 'add self.setUps setUpOne', 'add self.setUps setUpTwo', 'add self.setUps setUpThree', 'set self set_up_idx 0', '', 'set self state SET_UP', ''], 'SET_UP:0': ['', 'set self calc len self.setUps', 'if self.set_up_idx < self.calc', '   exec self.setUps at self.set_up_idx', '   set self state SCAN', '   set self frame 0', '   set self rolls 2', 'endif', 'set self set_up_idx self.set_up_idx + 1', 'if self.set_up_idx > self.calc', '   # done', '   for frame self.frames', '      view frame bowlinglobby', '      if frame == MAIN', '      \t set player10 tangible 1', '\t set player10 state IDLE', '         focus frame player10', '      endif', '      if frame == MAIN2', '      \t set player20 tangible 1', '\t set player20 state IDLE', '      \t focus frame player20', '      endif', '      if frame == MAIN3', '      \t set player30 tangible 1', '\t set player30 state IDLE', '      \t focus frame player30', '      endif', '      if frame == MAIN4', '      \t set player40 tangible 1', '\t set player40 state IDLE', '      \t focus frame player40', '      endif', '   endfor', '   create bowlingmanager0 bowlingmanager0 self.x self.y', 'endif', ''], 'SCAN:0': ['', 'set self focus self', 'exec focusOn', 'set self x self.x + 8', ''], 'SCAN:120': ['', 'set self focus self', 'exec focusOn', 'set self x self.x - 8', ''], 'SCAN:239': ['', 'set self state START_ROLL', 'set self frame 0', ''], 'START_ROLL:0': ['', 'set self rolls self.rolls - 1', 'create say0 bowlingscore self.bowler_say_x self.bowler_say_y', 'set bowlingscore message self.score + "  "', 'set bowlingscore back backgroundsay0', 'set self calc len self.players', 'set self player_turn self.player_turn % self.calc', 'create bowlingman0 bowler self.bowler_start_x self.bowler_start_y', 'set bowler _input_name self.players at self.player_turn', 'set bowler state STAND', 'set self player_turn self.player_turn + 1', 'set self focus bowler', 'exec focusOn', 'set self state WAIT_FOR_THROW', ''], 'WAIT_FOR_THROW:0': ['', 'if THROW in bowler.state and bowler.frame == 12', '   set self focus bowlingball', '   exec focusOn', '   set self state WAIT', 'endif', ''], 'BONK:0': ['', 'exec focusOn', 'set self state WAIT', 'set self frame 0', ''], 'TIMER:60': ['', 'set self state SET_UP', 'set self frame 0', 'if self.rolls', '   for pin self.pins', '      if inworld pin', '         set self state SCAN', '      endif', '   endfor', 'endif', ''], 'focusOn': ['', 'for frame self.frames', '   focus frame self.focus', 'endfor', ''], 'setUpOne': ['', 'create bowlingpin0 pin0 320 720', 'create bowlingpin0 pin1 368 752', 'create bowlingpin0 pin2 368 688', 'create bowlingpin0 pin3 416 784', 'create bowlingpin0 pin4 416 656', 'create bowlingpin0 pin5 416 720', 'create bowlingpin0 pin6 464 800', 'create bowlingpin0 pin7 464 640', 'create bowlingpin0 pin8 496 752', 'create bowlingpin0 pin9 496 688', 'set self pins []', 'add self.pins pin0', 'add self.pins pin1', 'add self.pins pin2', 'add self.pins pin3', 'add self.pins pin4', 'add self.pins pin5', 'add self.pins pin6', 'add self.pins pin7', 'add self.pins pin8', 'add self.pins pin9', ''], 'setUpTwo': ['', 'create bowlingpin0 pin0 1040 800', 'create bowlingpin0 pin1 1088 800', 'create bowlingpin0 pin2 1136 800', 'create bowlingpin0 pin3 1184 768', 'create bowlingpin0 pin4 1232 736', 'create bowlingpin0 pin5 1280 704', 'create bowlingpin0 pin6 1328 672', 'create bowlingpin0 pin7 1376 640', 'create bowlingpin0 pin8 1424 640', 'create bowlingpin0 pin9 1472 640', 'set self pins []', 'add self.pins pin0', 'add self.pins pin1', 'add self.pins pin2', 'add self.pins pin3', 'add self.pins pin4', 'add self.pins pin5', 'add self.pins pin6', 'add self.pins pin7', 'add self.pins pin8', 'add self.pins pin9', ''], 'setUpThree': ['', 'create bowlingpin0 pin0 672 752', 'create bowlingpin0 pin1 704 704', 'create bowlingpin0 pin2 736 752', 'create bowlingpin0 pin3 768 704', 'create bowlingpin0 pin4 800 752', 'create bowlingpin0 pin5 736 656', 'create bowlingpin0 pin6 1152 704', 'create bowlingpin0 pin7 1216 704', 'create bowlingpin0 pin8 1280 704', 'create bowlingpin0 pin9 1216 640', 'set self pins []', 'add self.pins pin0', 'add self.pins pin1', 'add self.pins pin2', 'add self.pins pin3', 'add self.pins pin4', 'add self.pins pin5', 'add self.pins pin6', 'add self.pins pin7', 'add self.pins pin8', 'add self.pins pin9']}, 'bowlingalleybuilding': {'START:0': ['', 'set self state LOOK', 'set self direction -1', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'doorbowlinglobby': {'START:0': ['', 'set self state DOOR', 'set self destination bowlinglobby', 'g'], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'dooryard1': {'START:0': ['', 'set self state DOOR', 'set self destination yard1', 'g'], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'doorbowling': {'START:0': ['', 'set self state DOOR', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      set self state INVISIBLE', '      set self tangible 0', '', '      view self.frame_name bowlingalley', '      add bowlingmanager0.players self._input_name', '      add bowlingmanager0.frames self.frame_name', '', '      set self respawnx self.x', '      set self respawny self.y', '', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}, 'backgroundbowling': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'desk0': {'START:0': ['', 'set self state LOOK', 'set self frame 0', ''], 'LOOK:0': ['', 'set self frame 0']}, 'bowlinggirl': {'START:0': ['', 'set self state SLAM ', 'set self direction -1', ''], 'LEFT:60': ['', 'set self state LEYEROLL', 'set self frame 0', ''], 'RIGHT:60': ['', 'set self state REYEROLL', 'set self frame 0', ''], 'LEYEROLL:30': ['', 'set self state RIGHT', 'set self frame 0', ''], 'REYEROLL:30': ['', 'set self state LEFT', 'set self frame 0', '', ''], 'SLAM:30': ['', 'if RAND? and RAND?', '   set self state LEFT', 'endif', 'set self frame 0']}, 'castleFbackground': {'START:0': ['', 'set self platform 1', 'set self frame 0', 'front']}, 'castlebackground': {'START:0': ['', 'set self platform 1', 'set self frame 0', 'back', '']}, 'platformgrass': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'platforVmwood': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'WOplains1_plains0': {'START:0': ['', '# to is _left, from is _right', 'set self _left plains1', 'set self _right plains0', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOplains2_plains1': {'START:0': ['', '# to is _left, from is _right', 'set self _left plains2', 'set self _right plains1', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'pigherder': {'START:0': ['', 'set self state STAND', 'set self frame 0', ''], 'THUMBSUP:120': ['', 'set self state STAND', 'set self frame 0', ''], 'WELP:120': ['', 'set self state STAND', 'set self frame 0', '']}, 'castlegateplatform': {'START:0': ['', 'set self state CASTLEGATE', 'set self platform 1', 'set self frame 0', ''], 'CASTLEGATE:0': ['', 'set self frame 0', ''], 'RISING:0': ['', 'if self.h <= 64', '   set self state CASTLEGATE', 'endif', ''], 'RISING:30': ['', 'set self h self.h - 32', 'set self frame 0']}, 'switch': {'START:0': ['', 'set self state OFF', 'set self frame 0', 'set self triggered 0', 'hurtboxes switch', ''], 'SWAPON:18': ['', 'set self state ON', ''], 'SWAPOFF:18': ['', 'set self state OFF', ''], 'ON:0': ['', 'set self frame 0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'HITSTUN:0': ['', 'set self direction 1', 'if OFF in self.state', '   img switch0', 'endif', 'if ON in self.state', '   switch5', 'endif', 'if not self.triggered', '   set self state SWAPON', '   set castlegateplatform0 state RISING ', 'endif', 'if self.triggered', '   set self state SWAPOFF', '   set castlegateplatform0 state CASTLEGATE', 'endif', 'set self triggered not self.triggered', 'set self frame 0', '']}, 'backgroundcastle': {'START:0': ['', 'set self platform 1', 'set self frame 0', '']}, 'platforcastle': {'START:0': ['', 'set self state PLATFORM', 'set self platform 1', 'set self frame 0', 'set self touched 0', ''], 'PLATFORM:0': ['', 'if self.touched > 0', '    set self state TOUCHED', 'endif', 'set self frame 0', ''], 'TOUCHED:0': ['', 'set self frame 0']}, 'WOcastle0_plains2': {'START:0': ['', '# to is _left, from is _right', 'set self _left castle0', 'set self _right plains2', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'WOdungeon0_castle0': {'START:0': ['', '# to is _left, from is _right', 'set self _left dungeon0', 'set self _right castle0', 'set self offset_left 128', 'set self offset_right 128', '', 'create WOinbetween0 self.name + inbetween self.x + 32 self.y', 'set self.name + inbetween w self.w - 64', 'set self.name + inbetween h self.h', '', 'create WOfrom0 self.name + from0 self.x self.y', 'set self.name + from0 w 32', 'set self.name + from0 h self.h', '', 'create WOfrom0 self.name + from1 self.x + self.w - 32 self.y', 'set self.name + from1 w 32', 'set self.name + from1 h self.h', '', 'create WOto0 self.name + to0 self.x + self.offset_right self.y', 'set self.name + to0 w 32', 'set self.name + to0 h self.h', '', 'create WOto0 self.name + to1 self.x + self.w - self.offset_left - 32 self.y', 'set self.name + to1 w 32', 'set self.name + to1 h self.h', '', 'set self.name + inbetween A self._right', 'set self.name + inbetween B self._left', '', 'set self.name + from0 from self._right', 'set self.name + from1 from self._left', '', 'set self.name + to1 to self._right', 'set self.name + to0 to self._left', '', 'set self.name + inbetween init 1', 'set self.name + from0 init 1', 'set self.name + from1 init 1', 'set self.name + to0 init 1', 'set self.name + to1 init 1', '', 'place self.name + inbetween self._right', 'place self.name + inbetween self._left', '', 'place self.name + from0 self._right', 'place self.name + from0 self._left', '', 'place self.name + from1 self._right', 'place self.name + from1 self._left', '', 'place self.name + to0 self._right', 'place self.name + to0 self._left', '', 'place self.name + to1 self._right', 'place self.name + to1 self._left', '', 'goodbye']}, 'focuson': {'START:0': ['', 'set self noWO 1', 'set self state WAIT', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name', '   focus self.frame_name related.name', 'endif']}, 'focusoff': {'START:0': ['', 'set self noWO 1', 'set self state WAIT', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name', '   focus self.frame_name self', 'endif']}, 'bindscroll': {'START:0': ['', 'set self noWO 1', 'set self state WAIT', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name', '   scrollbound self.frame_name left related.x', '   scrollbound self.frame_name right related.x + related.w', '   scrollbound self.frame_name top related.y', '   scrollbound self.frame_name bottom related.y + related.h', 'endif', '']}, 'bindscrolloff': {'START:0': ['', 'set self noWO 1', 'set self state WAIT', ''], 'WAIT:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.frame_name', '   scrollbound self.frame_name left None', '   scrollbound self.frame_name right None', '   scrollbound self.frame_name top None', '   scrollbound self.frame_name bottom None', 'endif']}, 'warpcastle': {'START:0': ['', 'set self state OFF', 'set self destination fountain', 'set self partner warpcastlefrom0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'ON:9': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if related.state == ON', '      if self.door_key + _DOWN in inpEVENTS', '\t move self related.destination', '      \t view self.frame_name related.destination', '', '\t set self calcx related.x - self.x', '\t set self calcy related.y - self.y', '', '\t set self x warpcastlefrom0.x - self.calcx', '\t set self y warpcastlefrom0.y - self.calcy', '', '\t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', '   if related.state == OFF', '      set related state ON', '      set warpcastlefrom0 state ON', '   endif', 'endif', '']}, 'warpcastlefrom': {'START:0': ['', 'set self state OFF', 'set self destination castle0', 'set self partner warpcastle0', ''], 'OFF:0': ['', 'set self frame 0', ''], 'ON:9': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if related.state == ON', '      if self.door_key + _DOWN in inpEVENTS', '      \t move self related.destination', '      \t view self.frame_name related.destination', '\t ', '\t set self calcx related.x - self.x', '\t set self calcy related.y - self.y', '', '\t set self x warpcastle0.x - self.calcx', '\t set self y warpcastle0.y - self.calcy', '', '      \t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', 'endif', '']}, 'doormilkcheck': {'START:0': ['', 'set self state DOOR', 'set self destination nightclub', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      if self.hat != milk', '      \t create lockicon0 related.name + lockicon related.x + 24 related.y', '      endif', '      if self.hat == milk', '      \t move self related.destination', '      \t view self.frame_name related.destination', '      \t set self respawnx self.x', '      \t set self respawny self.y', '      \t remove inpEVENTS self.door_key + _DOWN', '      endif', '   endif', 'endif', '']}, 'doorcity1': {'START:0': ['', 'set self state DOOR', 'set self destination city1', ''], 'DOOR:0': ['', 'set self frame 0', ''], 'COLLIDE': ['', 'if self.door_key', '   if self.door_key + _DOWN in inpEVENTS', '      move self related.destination', '      view self.frame_name related.destination', '      set self respawnx self.x', '      set self respawny self.y', '      remove inpEVENTS self.door_key + _DOWN', '   endif', 'endif', '']}}